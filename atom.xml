<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>LBVR Games</title>
 <link href="https://www.lbvrgames.com/atom.xml" rel="self"/>
 <link href="https://www.lbvrgames.com/"/>
 <updated>2024-12-13T01:08:35+00:00</updated>
 <id>https://www.lbvrgames.com</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Oculus OpenXR runtime conflicts with Vive OpenXR runtime on Windows 10</title>
   <link href="https://www.lbvrgames.com/explanation/oculus-openxr-runtime-conflicts-with-vive-openxr-runtime-on-windows-10"/>
   <updated>2024-12-04T00:00:00+00:00</updated>
   <id>https://www.lbvrgames.com/explanation/oculus-openxr-runtime-conflicts-with-vive-openxr-runtime-on-windows-10</id>
   <content type="html">&lt;p&gt;When the Oculus OpenXR Runtime is set as active and your Unreal project uses the Meta XR plugin, the following crash report may appear.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-12-04/Crashes/OculusOpenXRRuntimeCrashReporter.png&quot; alt=&quot;Oculus OpenXR Runtime Crash Reporter window.&quot; title=&quot;Oculus OpenXR Runtime Crash Reporter&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;For me, the issue lies with the Vive OpenXR runtime, which is part of the Vive Streaming application. This application is used to connect Vive standalone headsets, such as the Vive Focus 3, to your PC (i.e. for PCVR). When I delete the Vive Streaming application, I can start the Unreal project without any issues.&lt;/p&gt;

&lt;p&gt;Of course, it would be quite inconvenient to uninstall the Vive Streaming application every time I want to use the Meta Quest and reinstall it when switching back to the Vive Focus 3. Fortunately, there’s another option.&lt;/p&gt;

&lt;p&gt;Open the Registry Editor in Windows and navigate to: &lt;span class=&quot;break-at-backslash&quot;&gt; Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Khronos\OpenXR\1\ApiLayers\Implicit &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You should see the following entries:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-12-04/WindowsRegistry/ViveOpenXRRegistryEntries.png&quot; border=&quot;1&quot; alt=&quot;Vive OpenXR registry entries.&quot; title=&quot;Vive OpenXR registry entries&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Delete the entry for &lt;span class=&quot;break-at-backslash&quot;&gt;C:\W\VIVE Business Streaming\OpenXR\ViveVR_openxr\ViveOpenXRMR\ViveOpenXRMR.json &lt;/span&gt;. Your Unreal project should now open without any issues.&lt;/p&gt;

&lt;h2 id=&quot;what-does-the-viveopenxrmr-do&quot;&gt;What does the ViveOpenXRMR do?&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;ChatGPT generated&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The ViveOpenXRMR runtime is part of HTC’s OpenXR integration and is designed to enable Mixed Reality (MR) and Virtual Reality (VR) functionalities for HTC devices like the Vive XR Elite and Focus 3. This runtime acts as a bridge between applications built using OpenXR (an open standard for VR/AR development) and the specific hardware features of HTC headsets. The ViveOpenXRMR runtime provides several key functions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Controller and Hand Tracking&lt;/strong&gt;: It supports interaction profiles for HTC-specific controllers and hand-tracking features.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Passthrough and MR Features&lt;/strong&gt;: The runtime enables mixed reality features such as passthrough, allowing virtual objects to be placed within the user’s physical environment, similar to what is offered by Meta Quest.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Facial and Eye Tracking Extensions&lt;/strong&gt;: HTC’s OpenXR runtime includes optional extensions to support advanced features like facial and eye tracking for more immersive applications.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;System Compatibility&lt;/strong&gt;: It integrates with HTC’s VIVE SRanipal system and other tools to optimize performance and ensure compatibility with HTC’s ecosystem​.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you see references to this runtime in your logs, it indicates that the system is recognizing it as the active OpenXR runtime, even if you’re developing for another platform like Meta Quest. This might lead to compatibility issues, so it’s crucial to ensure the correct OpenXR runtime is selected based on your target hardware.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ChatGPT sources&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Vive Developers - How to Use SR_Runtime - Developer Resources [&lt;a href=&quot;https://developer.vive.com/resources/openxr/openxr-pcvr/tutorials/how-use-sr_runtime/&quot;&gt;link&lt;/a&gt;]&lt;/li&gt;
  &lt;li&gt;Vive Wave - Build Unreal Engine 5 OpenXR Applications on VIVE XR Devices [&lt;a href=&quot;https://dl.vive.com/SDK/openxr/openXRforAIO/[ViveFocus3]Build_UE5_OpenXR_for_Wave_Runtime_v1.0.5.pdf&quot;&gt;link&lt;/a&gt;]&lt;/li&gt;
  &lt;li&gt;Vive Developers - Overview: OpenXR for PC - Developer Resources [&lt;a href=&quot;https://developer.vive.com/resources/openxr/openxr-pcvr/overview/&quot;&gt;link&lt;/a&gt;]&lt;/li&gt;
  &lt;li&gt;Vive Download - Unity Tutorials | Vive OpenXR - Developer Resources [&lt;a href=&quot;https://developer.vive.com/resources/openxr/unity/tutorials/&quot;&gt;link&lt;/a&gt;]&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>How to deploy a mobile VR application to the Meta Quest 3S</title>
   <link href="https://www.lbvrgames.com/how-to/how-to-deploy-a-mobile-vr-application-to-the-meta-quest-3s"/>
   <updated>2024-11-28T00:00:00+00:00</updated>
   <id>https://www.lbvrgames.com/how-to/how-to-deploy-a-mobile-vr-application-to-the-meta-quest-3s</id>
   <content type="html">&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;CPU: Intel Core i5-13600KF&lt;/li&gt;
  &lt;li&gt;GPU: Inno3D GeForce RTX 4070 TWIN X2&lt;/li&gt;
  &lt;li&gt;RAM: 64 GB&lt;/li&gt;
  &lt;li&gt;OS:  Windows 10 Pro 22H2&lt;/li&gt;
  &lt;li&gt;UE:  5.4&lt;/li&gt;
  &lt;li&gt;HMD: Meta Quest 3S&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This tutorial explains how to deploy a mobile VR application to the Meta Quest 3S. We will use the VRTemplate as the application to be deployed. By the end of the tutorial, you will be able to run the VRTemplate as a mobile application on the Meta Quest 3S. If you have any questions, feel free to &lt;a href=&quot;mailto:tutorials@lbvrgames.com&quot;&gt;email us&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;set-up-android-sdk-and-ndk&quot;&gt;Set Up Android SDK and NDK&lt;/h2&gt;
&lt;p&gt;The Meta Quest 3S is an Android-based standalone headset, so the Unreal Engine will need to be configured for Android development. To set up the Android SDK and NDK in UE 5.4 follow the next steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open the Epic Games Launcher and go to Unreal Engine &amp;gt; Library.&lt;/li&gt;
  &lt;li&gt;Click on the arrow next to the Launch button, select Options &amp;gt; Target Platforms &amp;gt; Android and click Apply.&lt;/li&gt;
  &lt;li&gt;Install Android Studio and the necessary SDK components. Follow &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/set-up-android-sdk-ndk-and-android-studio-using-turnkey-for-unreal-engine?application_version=5.4&quot;&gt;Unreal Engine&lt;/a&gt;’s documentation for this.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-the-meta-xr-plugin&quot;&gt;Install the Meta XR Plugin&lt;/h2&gt;
&lt;p&gt;Follow the steps under the &lt;a href=&quot;https://developers.meta.com/horizon/documentation/unreal/unreal-quick-start-install-metaxr-plugin/#the-meta-xr-plugin-and-ue-5x&quot;&gt;The Meta XR plugin and UE 5.x&lt;/a&gt; section.&lt;/p&gt;

&lt;h2 id=&quot;configure-the-headset-for-app-development&quot;&gt;Configure the headset for app development&lt;/h2&gt;
&lt;p&gt;Follow the steps on the &lt;a href=&quot;https://developers.meta.com/horizon/documentation/unreal/unreal-quick-start-config-headset&quot;&gt;Configuring your headset for app development&lt;/a&gt; webpage.&lt;/p&gt;

&lt;h2 id=&quot;configure-the-unreal-project&quot;&gt;Configure the Unreal project&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Follow the steps on the &lt;a href=&quot;https://developers.meta.com/horizon/documentation/unreal/unreal-setting-up-metaxr-plugin&quot;&gt;Setting up the Meta XR plugin for your project&lt;/a&gt; webpage.
    &lt;ul&gt;
      &lt;li&gt;The final section is called &lt;strong&gt;Configure the Meta XR Platform window&lt;/strong&gt;. This part can be skipped since it is dealing with &lt;a href=&quot;https://developers.meta.com/horizon/documentation/unreal/unreal-plugin-settings#general-meta-xr-settings&quot;&gt;uploading your Unreal Engine apps for Quest devices to the Meta Horizon platform&lt;/a&gt;. We will upload our apps directly to the headset. Therefore, this is not needed.&lt;/li&gt;
      &lt;li&gt;An overview of the Meta XR plugin settings can be found &lt;a href=&quot;https://developers.meta.com/horizon/documentation/unreal/unreal-plugin-settings&quot;&gt;here&lt;/a&gt;. For now everything can be left at their default setting.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Go to Project Settings &amp;gt; Platforms &amp;gt; Android and enable &lt;a href=&quot;https://dev.epicgames.com/community/learning/tutorials/y4vB/unreal-engine-5-4-x-for-meta-quest-vr&quot;&gt;Package game data inside .apk?&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;launch-the-app-on-a-meta-quest-headset&quot;&gt;Launch the app on a Meta Quest headset&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Package your app by going to Platforms &amp;gt; Android &amp;gt; Package Project where the Flavor Selection is set to Android (ASTC).&lt;/li&gt;
  &lt;li&gt;Once the package is ready you plug in the headset to your PC.&lt;/li&gt;
  &lt;li&gt;Open a command prompt in the package directory and type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adb devices&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;If&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adb devices&lt;/code&gt; doesn’t show the headset then install the &lt;a href=&quot;https://developers.meta.com/horizon/downloads/package/oculus-adb-drivers/&quot;&gt;Oculus ADB Drivers&lt;/a&gt; and try it again.&lt;/li&gt;
      &lt;li&gt;If the device is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unauthorized&lt;/code&gt; then put on the headset go to settings &amp;gt; system &amp;gt; developers &amp;gt; allow checkbox “MTP Notifications”. Reboot headset. Connect USB Cable. Allow USB debug. &lt;a href=&quot;https://www.reddit.com/r/sidequest/comments/jbt4ug/comment/lt4x6c4/?utm_source=share&amp;amp;utm_medium=web3x&amp;amp;utm_name=web3xcss&amp;amp;utm_term=1&amp;amp;utm_content=share_button&quot;&gt;Source&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Install the application by running the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adb install &amp;lt;apk-path&amp;gt;&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adb install -r &amp;lt;apk-path&amp;gt;&lt;/code&gt; if an application with the same name already exists on the device.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following approaches didn’t work for me:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.meta.com/horizon/documentation/unreal/unreal-packaging-and-preparing-your-new-project#launching-your-app-on-a-meta-quest-headset&quot;&gt;Launching your app on a Meta Quest headset&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Launch a project &lt;a href=&quot;https://developers.meta.com/horizon/documentation/unreal/unreal-ide-guide-android#launching-a-project-directly-onto-your-headset&quot;&gt;directly&lt;/a&gt; onto your headset from the Unreal Editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-up-a-new-unreal-project-after-installation&quot;&gt;Setting up a new Unreal project after installation&lt;/h2&gt;
&lt;p&gt;If you create a new project after setting up the Unreal Engine for Meta Quest development then it is no longer necessary to follow all the above steps. The only steps you need to take are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Go to Edit &amp;gt; Plugins &amp;gt; Meta XR plugin and enable the plugin.&lt;/li&gt;
  &lt;li&gt;Restart the Unreal Editor.&lt;/li&gt;
  &lt;li&gt;Go to Edit &amp;gt; Project Settings &amp;gt; Plugins &amp;gt; Meta XR &amp;gt; Launch Meta XR Project Setup Tool.&lt;/li&gt;
  &lt;li&gt;Click on Apply All for the Required Rules. Do this for all devices you want to develop for.&lt;/li&gt;
  &lt;li&gt;Go to Edit &amp;gt; Project Settings &amp;gt; Platforms &amp;gt; Android&lt;/li&gt;
  &lt;li&gt;Click on Configure Now when you see that your project is not configured for the Android/Google Play services platform.&lt;/li&gt;
  &lt;li&gt;Go to Project Settings &amp;gt; Platforms &amp;gt; Android and enable Package game data inside .apk?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;known-issues&quot;&gt;Known issues&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Oculus OpenXR Runtime&lt;/strong&gt;&lt;br /&gt;
If you read the documentation then you will end up on the &lt;a href=&quot;https://developers.meta.com/horizon/documentation/unreal/unreal-link&quot;&gt;Use Link for App Development&lt;/a&gt; webpage. Under the Configure feature settings for development section it is stated that you need to select &lt;strong&gt;Set Meta Quest Link as active&lt;/strong&gt; which sets the Meta Quest Link as the active OpenXR runtime. However, if I did this while the Meta XR plugin is enabled the Unreal Editor kept crashing with the following crash report:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-28/Crashes/MobileVRMetaQuest3SCrashReporter.png&quot; alt=&quot;MobileVRMetaQuest3S Crash Reporter window.&quot; title=&quot;MobileVRMetaQuest3S Crash Reporter&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://forums.unrealengine.com/t/error-when-launching-engine/1181504/11&quot;&gt;S-ed&lt;/a&gt; suggests to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-nohmd&lt;/code&gt; parameter when starting the engine. This worked for me. However, you will not be able to use the VR Preview in the Unreal Editor despite the fact that your headset is connected to your PC through Meta Quest Link or Air Link. Another option that worked for me is to set SteamVR back as the OpenXR runtime in the SteamVR settings. For this SteamVR needs to be installed on your PC.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-28/Crashes/SteamVRSettings.png&quot; alt=&quot;SteamVR Settings window.&quot; title=&quot;SteamVR Settings&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Meta Quest Link Application&lt;/strong&gt;&lt;br /&gt;
If you’ve used your Meta Quest headset on a different computer before following this tutorial, ensure that Air Link is disabled if the headset and PC are not connected to the same network. In this situation, use a USB-C cable to connect the headset to the PC, and select the Link option in the Meta Quest Link application to detect the headset and complete the setup. If the headset and PC are connected to the same network, you can use the Air Link option in the Meta Quest Link application to detect the headset and finish the setup.&lt;/p&gt;

&lt;h2 id=&quot;useful-links&quot;&gt;Useful links&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.epicgames.com/community/learning/tutorials/y4vB/unreal-engine-5-4-x-for-meta-quest-vr&quot;&gt;Unreal Engine 5.4.x for Meta Quest VR&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.unrealengine.com/t/how-to-game-development-best-practices-for-quest-3-using-unreal-engine-5/2056737&quot;&gt;How To: Game Development Best Practices for Quest 3 using Unreal Engine 5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>How to deploy a mobile VR application to the Vive Focus 3</title>
   <link href="https://www.lbvrgames.com/how-to/how-to-deploy-a-mobile-vr-application-to-the-vive-focus-3"/>
   <updated>2024-11-21T00:00:00+00:00</updated>
   <id>https://www.lbvrgames.com/how-to/how-to-deploy-a-mobile-vr-application-to-the-vive-focus-3</id>
   <content type="html">&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;CPU: Intel Core i5-13600KF&lt;/li&gt;
  &lt;li&gt;GPU: Inno3D GeForce RTX 4070 TWIN X2&lt;/li&gt;
  &lt;li&gt;RAM: 64 GB&lt;/li&gt;
  &lt;li&gt;OS:  Windows 10 Pro 22H2&lt;/li&gt;
  &lt;li&gt;UE:  5.4&lt;/li&gt;
  &lt;li&gt;HMD: Vive Focus 3&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This tutorial explains how to deploy a mobile VR application to the Vive Focus 3. We will use the VRTemplate as the application to be deployed. By the end of the tutorial, you will be able to run the VRTemplate as a mobile application on the Vive Focus 3. If you have any questions, feel free to &lt;a href=&quot;mailto:tutorials@lbvrgames.com&quot;&gt;email us&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;set-up-android-sdk-and-ndk&quot;&gt;Set Up Android SDK and NDK&lt;/h2&gt;

&lt;p&gt;The Vive Focus 3 is an Android-based standalone headset, so the Unreal Engine will need to be configured for Android development. I started with UE 5.4 but when trying to install the Vive Wave SDK I discovered that there was no support for UE 5.4. The latest supported version is UE 5.3. Despite using UE 5.4 for the Android SDK and NDK setup I had no issues switching to UE 5.3 when installing the Vive Wave SDK. The advantage of using UE 5.4 or newer is that the Android Turnkey installation can be used which simplifies the installation process. To set up the Android SDK and NDK in UE 5.4 follow the next steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open the Epic Games Launcher and go to Unreal Engine &amp;gt; Library.&lt;/li&gt;
  &lt;li&gt;Click on the arrow next to the Launch button, select Options &amp;gt; Target Platforms &amp;gt; Android and click Apply.&lt;/li&gt;
  &lt;li&gt;Install Android Studio and the necessary SDK components. Follow &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/set-up-android-sdk-ndk-and-android-studio-using-turnkey-for-unreal-engine?application_version=5.4&quot;&gt;Unreal Engine&lt;/a&gt;’s documentation for this.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-the-vive-wave-sdk&quot;&gt;Install the Vive Wave SDK&lt;/h2&gt;

&lt;p&gt;The Vive Wave SDK provides the tools necessary to develop for the Vive Focus 3. The following steps explain how to install the SDK:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Download the Vive Wave SDK (latest version) from the &lt;a href=&quot;https://developer.vive.com/resources/vive-wave/download/latest/&quot;&gt;Vive Developer website&lt;/a&gt;. At the time this was UE 5.3. Despite UE 5.4 was already released.&lt;/li&gt;
  &lt;li&gt;Extract the Vive Wave SDK and copy the Plugins directory’s content (i.e. WaveVR) to your Unreal Engine project’s Plugins folder.&lt;/li&gt;
  &lt;li&gt;Go to Edit &amp;gt; Plugins inside the Unreal Editor and search for Wave VR. If the plugin doesn’t show up then restart the Unreal Editor and try again.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enable the Wave VR plugin and restart the Unreal Engine as prompted. If you get the following pop-up window then click &lt;strong&gt;No&lt;/strong&gt;.&lt;/p&gt;

    &lt;div align=&quot;center&quot;&gt;
      &lt;img src=&quot;/assets/images/2024-11-21/InstallTheViveWaveSDK/MissingModules.png&quot; border=&quot;1&quot; alt=&quot;The Missing Modules window.&quot; title=&quot;Missing Modules&quot; /&gt;
  &lt;/div&gt;

    &lt;p&gt;Right-click on the &lt;strong&gt;.uproject&lt;/strong&gt; and select &lt;strong&gt;Switch Unreal Engine version…&lt;/strong&gt;. change your Unreal Engine version from 5.4 to 5.3.&lt;/p&gt;

    &lt;div align=&quot;center&quot;&gt;
      &lt;img src=&quot;/assets/images/2024-11-21/InstallTheViveWaveSDK/SwitchUnrealEngineVersion.png&quot; alt=&quot;The Switch Unreal Engine version... option.&quot; title=&quot;Switch Unreal Engine Version&quot; /&gt;
  &lt;/div&gt;

    &lt;p&gt;Finally, change your Unreal Engine version from 5.4 to 5.3 from the drop-down menu.&lt;/p&gt;

    &lt;div align=&quot;center&quot;&gt;
      &lt;img src=&quot;/assets/images/2024-11-21/InstallTheViveWaveSDK/SelectUnrealEngineVersion.png&quot; border=&quot;1&quot; alt=&quot;The Select Unreal Engine Version drop-down menu.&quot; title=&quot;Select Unreal Engine Version&quot; /&gt;
  &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;configure-the-project-settings&quot;&gt;Configure the project settings&lt;/h2&gt;

&lt;p&gt;Set the Project Settings according to &lt;a href=&quot;https://hub.vive.com/storage/docs/en-us/UnrealPlugin/UnrealPluginGettingStart.html#project-settings&quot;&gt;Vive&lt;/a&gt;’s documentation. The only difference with the Vive documentation is that on step 4 we first had to disable &lt;strong&gt;Package for Meta Quest devics&lt;/strong&gt; and then enable &lt;strong&gt;Support OpenGL ES3.2&lt;/strong&gt; otherwise this option cannot be changed. In the Vive documentation &lt;strong&gt;Support OpenGL ES3.1&lt;/strong&gt; is mentioned but for us it was &lt;strong&gt;Support OpenGL ES3.2&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;vive-wave-sdk-compliant&quot;&gt;Vive Wave SDK compliant&lt;/h2&gt;

&lt;p&gt;To run the VRTemplate as an Android application on the Vive Focus 3 we need to make some changes to our Unreal project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enhanced Input&lt;/strong&gt;&lt;br /&gt;
If you’re using Enhanced Input, ensure WaveVR inputs are mapped accordingly in your Input Mapping Contexts. You can find them in your Content Browser &amp;gt; All &amp;gt; Content &amp;gt; VRTemplate &amp;gt; Input.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;IMC_Default
    &lt;ul&gt;
      &lt;li&gt;IA_Move: &lt;strong&gt;Wave (R) Thumbstick Y&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Turn: &lt;strong&gt;Wave (L) Thumbstick X&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Grab_Left: &lt;strong&gt;Wave (L) Grip Press&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Grab_Right: &lt;strong&gt;Wave (R) Grip Press&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Menu_Toggle_Left: &lt;strong&gt;Wave (L) Y Press&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Menu_Toggle_Right: &lt;strong&gt;Wave (R) B Press&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IMC_Hands
    &lt;ul&gt;
      &lt;li&gt;IA_Hand_Point_Left: &lt;strong&gt;Wave (L) Trigger Touch&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Hand_Point_Right: &lt;strong&gt;Wave (R) Trigger Touch&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Hand_ThumbUp_Left: &lt;strong&gt;Wave (L) Thumbstick Touch&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Hand_ThumbUp_Right: &lt;strong&gt;Wave (R) Thumbstick Touch&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Hand_Grasp_Left: &lt;strong&gt;Wave (L) Grip Axis&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Hand_Grasp_Right: &lt;strong&gt;Wave (R) Grip Axis&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Hand_IndexCurl_Left: &lt;strong&gt;Wave (L) Trigger Axis&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Hand_IndexCurl_Right: &lt;strong&gt;Wave (R) Trigger Axis&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IMC_Menu
    &lt;ul&gt;
      &lt;li&gt;IA_Menu_Interact_Left: &lt;strong&gt;Wave (L) Trigger Axis&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IA_Menu_Interact_Right: &lt;strong&gt;Wave (R) Trigger Axis&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IMC_Weapon_Left
    &lt;ul&gt;
      &lt;li&gt;IA_Shoot_Left: &lt;strong&gt;Wave (L) Trigger Press&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IMC_Weapon_Right
    &lt;ul&gt;
      &lt;li&gt;IA_Shoot_Right: &lt;strong&gt;Wave (R) Trigger Press&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;VRPawn&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Change the Motion Source of the MotionControllerLeftGrip/MotionControllerRightGrip to &lt;strong&gt;Left/Right&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Rename the MotionControllerLeftAim/MotionControllerRightAim to &lt;strong&gt;MotionControllerLeftAimOld/MotionControllerRightAimOld&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Add a Wave VRController Pointer as the child of the MotionControllerLeftGrip/MotionControllerRightGrip and name it &lt;strong&gt;MotionControllerLeftAim/MotionControllerRightAim&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Set the &lt;strong&gt;WidgetInteractionLeft/WidgetInteractionRight&lt;/strong&gt; as a child of the MotionControllerLeftAim/MotionControllerRightAim.&lt;/li&gt;
  &lt;li&gt;Go to the Event Graph, Input Action Move - Teleport and replace the Motion Controller Right Aim Old getter with the &lt;strong&gt;Motion Controller Right Aim&lt;/strong&gt; getter.&lt;/li&gt;
  &lt;li&gt;Delete the &lt;strong&gt;MotionControllerLeftAimOld/MotionControllerRightAimOld&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point the Components hierarchy should look like the following:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-21/VRPawn/ComponentsHierarchy.png&quot; alt=&quot;The Components panel.&quot; title=&quot;Components hierarchy&quot; /&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Set the Spot scale of the MotionControllerLeftAim/MotionControllerRightAim to  &lt;strong&gt;(X=0.000000,Y=0.000000,Z=0.000000)&lt;/strong&gt; to hide the pointer.&lt;/li&gt;
  &lt;li&gt;Set the Fading particle size of the MotionControllerLeftAim/MotionControllerRightAim to  &lt;strong&gt;(X=0.000000,Y=0.000000,Z=0.000000)&lt;/strong&gt; to hide the beam.&lt;/li&gt;
  &lt;li&gt;Change the location and rotation of the HandLeft/HandRight
    &lt;ul&gt;
      &lt;li&gt;HandLeft
        &lt;ul&gt;
          &lt;li&gt;Location = &lt;strong&gt;(X=-14.000000,Y=-3.500000,Z=-1.000000)&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;Rotation = &lt;strong&gt;(Pitch=-90.000000,Yaw=-180.000000,Roll=90.000000)&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;HandRight
        &lt;ul&gt;
          &lt;li&gt;Location = &lt;strong&gt;(X=-14.000000,Y=3.500000,Z=-1.000000)&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;Rotation = &lt;strong&gt;(Pitch=90.000000,Yaw=0.000000,Roll=90.000000)&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;GrabComponent&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Go to the GetHeldByHand function and change LeftGrip to &lt;strong&gt;Left&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Go to the TryGrab function and replace PlayHapticEffect with &lt;strong&gt;TriggerHapticPulse&lt;/strong&gt;.
    &lt;div align=&quot;center&quot;&gt;
      &lt;img src=&quot;/assets/images/2024-11-21/GrabComponent/TriggerHapticPulseCallInTryGrabFunction.png&quot; alt=&quot;The TriggerHapticPulse function is called in the GrabComponent&apos;s TryGrab function.&quot; title=&quot;TriggerHapticPulse call in TryGrab function&quot; /&gt;
  &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pistol&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Change the location and rotation of the GrabComponentSnap.
    &lt;ul&gt;
      &lt;li&gt;Location = &lt;strong&gt;(X=0.000000,Y=12.000000,Z=5.000000)&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Rotation = &lt;strong&gt;(Pitch=10.000000,Yaw=90.000000,Roll=0.000000)&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Go to the event graph and replace PlayHapticEffect with &lt;strong&gt;TriggerHapticPulse&lt;/strong&gt;.
    &lt;div align=&quot;center&quot;&gt;
      &lt;img src=&quot;/assets/images/2024-11-21/Pistol/TriggerHapticPulseCallInPistolEventGraph.png&quot; alt=&quot;The TriggerHapticPulse function is called in the Pistol&apos;s event graph.&quot; title=&quot;TriggerHapticPulse call in Pistol event graph&quot; /&gt;
  &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Menu&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;In the SetMotionControllerReference function replace LeftAim/RightAim in the Select node with &lt;strong&gt;Left/Right&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;testing-and-deployment&quot;&gt;Testing and Deployment&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Package the Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;In the Unreal Editor, go to &lt;strong&gt;Platforms &amp;gt; Android &amp;gt; Package Project&lt;/strong&gt; and under &lt;strong&gt;Flavor selection&lt;/strong&gt; choose &lt;strong&gt;Android (ASTC)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Deploy to the Vive Focus 3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Set the headset in &lt;strong&gt;&lt;a href=&quot;https://developer.vive.com/resources/hardware-guides/vive-focus-specs-user-guide/how-do-i-put-focus-developer-mode/&quot;&gt;Developer Mode&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In &lt;strong&gt;Developer Mode&lt;/strong&gt; on the headset, enable &lt;strong&gt;USB Debugging&lt;/strong&gt; in &lt;strong&gt;Settings &amp;gt; Advanced &amp;gt; USB debugging&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Connect your &lt;strong&gt;Vive Focus 3&lt;/strong&gt; to your PC using a USB-C cable.&lt;/li&gt;
  &lt;li&gt;Use the &lt;strong&gt;Android Debug Bridge (ADB)&lt;/strong&gt;, found in Android SDK’s platform-tools folder, to install the APK:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adb &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;path/to/yourproject.apk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Launch the app from the headset’s app library once installed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;time-to-explain-a-few-things&quot;&gt;Time to explain a few things&lt;/h2&gt;

&lt;p&gt;You will notice that in the orignal VRTemplate it was possible to use the thumbstick to move over the Menu. This is not possible with the Wave SDK because there is no WaveVR input that combines both the X- and Y-value. If you look at the IMC_Menu you will see under IA_Menu_Cursor_Left [Vendor] (L) Thumbstick 2D-Axis. This option is not available for the WaveVR input.&lt;/p&gt;

&lt;p&gt;In the VRPawn we have changed the Motion Source from LeftGrip/RightGrip to Left/Right. However, if you hover over Motion Source you will see the following description: &lt;em&gt;Defines which pose this component should receive from the OpenXR Runtime. Left/Right MotionSource is the same as LeftGrip/RightGrip. See OpenXR specification for details on poses&lt;/em&gt;. It is important to emphasize that this is the case for &lt;strong&gt;OpenXR&lt;/strong&gt; since we no longer use this plugin there is no option available called LeftGrip/RightGrip. You will see this if you click on the drop-down list. If we don’t change the Motion Source then both hands will lay on the ground and don’t move at all.&lt;/p&gt;

&lt;p&gt;We have also made the WaveVRControllerPointer, called MotionControllerLeftAim/MotionControllerRightAim, a child of the MotionControllerLeftGrip/MotionControllerRightGrip. This is done to make sure that the WaveVRControllerPointer is tracked since it has no Motion Source. In the original VRTemplate this is not necessary because there the MotionControllerLeftAim/MotionControllerRightAim uses the LeftAim/RightAim Motion Source. Since, these are part of OpenXR we can no longer use them.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to create a networked C++ actor in Unreal Engine</title>
   <link href="https://www.lbvrgames.com/how-to/how-to-create-a-networked-c++-actor-in-unreal-engine"/>
   <updated>2024-11-14T00:00:00+00:00</updated>
   <id>https://www.lbvrgames.com/how-to/how-to-create-a-networked-c++-actor-in-unreal-engine</id>
   <content type="html">&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;CPU: Intel Core i5-13600KF&lt;/li&gt;
  &lt;li&gt;GPU: Inno3D GeForce RTX 4070 TWIN X2&lt;/li&gt;
  &lt;li&gt;RAM: 64 GB&lt;/li&gt;
  &lt;li&gt;OS:  Windows 10 Pro 22H2&lt;/li&gt;
  &lt;li&gt;UE:  5.4&lt;/li&gt;
  &lt;li&gt;IDE: Visual Studio 2022 Community Edition&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This tutorial explains how to implement a C++ version of the pistol from Unreal Engine’s Virtual Reality (VR) template in a multiplayer environment. Since this tutorial assumes familiarity with the VR template, I will not explain its internal workings beyond what is necessary to understand the changes being made. By the end of this tutorial, you will understand how to implement networked VR objects using C++. If you have any questions, feel free to &lt;a href=&quot;mailto:tutorials@lbvrgames.com&quot;&gt;email us&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;download-multiplayer-virtual-reality-template&quot;&gt;Download multiplayer virtual reality template&lt;/h2&gt;
&lt;p&gt;The C++ pistol will be integrated into the multiplayer virtual reality template, which you can download from the &lt;a href=&quot;https://www.unrealengine.com/marketplace/en-US/store&quot;&gt;Unreal Engine Marketplace&lt;/a&gt;. A tutorial explaining the multiplayer implementation of this template can be found here &lt;a href=&quot;./unreal-engine-multiplayer-virtual-reality&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you have downloaded the template, rename the project from MultiplayerVR.uproject to VRTutorial.uproject.&lt;/p&gt;

&lt;h2 id=&quot;generate-visual-studio-project-files&quot;&gt;Generate Visual Studio project files&lt;/h2&gt;
&lt;p&gt;To open the multiplayer virtual reality template in Visual Studio, right-click on the  VRTutorial.uproject file and select Generate Visual Studio project files. However, when you do this, you will notice the following pop-up window appear.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/GenerateVisualStudioProjectFiles/ErrorPop-Up.png&quot; alt=&quot;Error pop-up window&quot; title=&quot;Error pop-up&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The pop-up window informs us that we cannot generate Visual Studio project files because the project doesn’t contain any source code (i.e. C++ files). To resolve this, we can add C++ files through the Unreal Editor.&lt;/p&gt;

&lt;h2 id=&quot;grabtype&quot;&gt;GrabType&lt;/h2&gt;
&lt;p&gt;The first C++ file we will add is a header file containing the &lt;strong&gt;CustomGrabType&lt;/strong&gt; enum. To do this, open the project in the Unreal Editor. Navigate to Tools &amp;gt; New C++ Class… &amp;gt; Common Classes &amp;gt; None, and click Next. In the following window, you will see a number of settings. Let’s take a look at them.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/GenerateVisualStudioProjectFiles/AddC++Class.png&quot; alt=&quot;Add C++ class window&quot; title=&quot;Add C++ class&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;First, we can choose a class type. Notice that initially, no class type is selected, and it is not required to select one. However, once you choose either Private or Public, you can toggle between these two options, but you cannot deselect both. This option determines the folder where the C++ files are placed. Before selecting an option, the path is &lt;em&gt;/PathToProjectDirectory/Source/&amp;lt;ModuleName&amp;gt;/MyClass.(h)(cpp)&lt;/em&gt;. After selecting Public, the header file will be placed in &lt;em&gt;/PathToProjectDirectory/Source/&amp;lt;ModuleName&amp;gt;/Public/MyClass.h&lt;/em&gt;, while the source file goes to &lt;em&gt;/PathToProjectDirectory/Source/&amp;lt;ModuleName&amp;gt;/Private/MyClass.h&lt;/em&gt;. If you select Private, both the header and source files are placed in &lt;em&gt;/PathToProjectDirectory/Source/&amp;lt;ModuleName&amp;gt;/Private/&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You might be wondering what the difference is between the Private and Public options. If you hover over each option, a small description appears:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Public&lt;/strong&gt;: A public class can be included and used inside other modules in addition to the module it resides in.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Private&lt;/strong&gt;: A private class can only be included and used within the module it resides in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A more detailed explanation of the differences between these options can be found on &lt;a href=&quot;https://www.youtube.com/watch?v=T8D3AhNd9Ww&amp;amp;ab_channel=UECasts&quot;&gt;UE Casts&lt;/a&gt;. Additionally, &lt;a href=&quot;https://forums.unrealengine.com/t/what-public-and-private-mean-on-c-wizard/50336/5&quot;&gt;SaxonRah&lt;/a&gt; discusses the reasons for using public and private classes on the Unreal Engine forum.&lt;/p&gt;

&lt;p&gt;The first class we will create is the &lt;strong&gt;CustomGrabType&lt;/strong&gt; class, which we will set as Private. Therefore, name the class &lt;strong&gt;CustomGrabType&lt;/strong&gt;. After the name field, you will see a dropdown menu that allows you to select the target module for your new class. Since we currently have only one module, you can leave this as it is. The other options can remain at their default values. Finally, click on Create Class. Once the class is created, you will see a message indicating that you need to build the project from your IDE (i.e. Visual Studio).&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/GenerateVisualStudioProjectFiles/BuildFromIDEPop-UpMessage.png&quot; alt=&quot;Build from IDE pop-up message window&quot; title=&quot;Build from IDE pop-up message&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Click OK. Next, a new message will appear, confirming that our class has been successfully added, but we must recompile our module before it will appear in the Content Browser.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/GenerateVisualStudioProjectFiles/RecompilePop-UpMessage.png&quot; alt=&quot;Recompile pop-up message window&quot; title=&quot;Recompile pop-up message&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Click Yes. The Visual Studio project will open, displaying both the source and header files for &lt;strong&gt;CustomGrabType&lt;/strong&gt;. To ensure everything compiles correctly at this point, right-click on the project in the Solution Explorer and select Build. If you did not close the Unreal Editor before building and the build configuration is set to Development Editor, you may encounter the following error.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The command &quot;&quot;C:\W\Epic Games\UE_5.4\Engine\Build\BatchFiles\Build.bat&quot; VRTutorialEditor Win64 Development -Project=&quot;E:\Unreal Projects\VRTutorial\VRTutorial.uproject&quot; -WaitMutex -FromMsBuild -architecture=x64&quot; exited with code 6.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Close the Unreal Editor and build the project again. Once the project is built, right-click on the project again, but this time select Debug &amp;gt; Start New Instance. This will launch the Development Editor, provided that this is selected as the build configuration from the Solution Configurations list. After confirming that it works, you can close the Unreal Engine editor.&lt;/p&gt;

&lt;p&gt;The difference between Build and Start New Instance is that the former compiles the code without running it, while the latter compiles the code (if necessary) and then runs it. You can also click on Local Windows Debugger at the top. This performs the same function as Start New Instance. The only difference is that you can run only one instance with Local Windows Debugger, whereas Start New Instance allows multiple instances.&lt;/p&gt;

&lt;p&gt;Since &lt;strong&gt;CustomGrabType&lt;/strong&gt; is just an enum, we can remove the source file and keep only the header file. Remove the source file from both the Solution Explorer and the source directory. The implementation of &lt;strong&gt;CustomGrabType&lt;/strong&gt; should resemble the following:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Fill out your copyright notice in the Description page of Project Settings.&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#pragma once
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CustomGrabType.generated.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;UENUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uint8&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UMETA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DisplayName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Free&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UMETA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DisplayName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Free&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Snap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UMETA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DisplayName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Snap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Custom&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UMETA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DisplayName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Custom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Build the project to include the &lt;strong&gt;CustomGrabType&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;time-to-explain-a-few-things&quot;&gt;Time to explain a few things&lt;/h3&gt;
&lt;p&gt;I will not explain every aspect of this class, but it’s worth noting that the Unreal Engine utilizes macros that are not part of the C++ language standard. Let’s break this down:&lt;/p&gt;

&lt;p&gt;The line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &quot;CustomGrabType.generated.h&quot;&lt;/code&gt; includes another header file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CustomGrabType.generated.h&lt;/code&gt;, which is generated by the &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/unreal-header-tool-for-unreal-engine&quot;&gt;UnrealHeaderTool&lt;/a&gt;. This command-line tool is used by the Unreal Engine to generate additional code and metadata for Unreal Engine types defined in header files.&lt;/p&gt;

&lt;p&gt;The line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UENUM(BlueprintType)&lt;/code&gt; is a macro provided by the Unreal Engine. It defines an enumeration that can be utilized in Unreal Engine’s Blueprint visual scripting system.&lt;/p&gt;

&lt;p&gt;The line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;enum class ECustomGrabType : uint8&lt;/code&gt; begins the definition of the enumeration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ECustomGrabType&lt;/code&gt;. This declaration specifies that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ECustomGrabType&lt;/code&gt; is an enumeration with a fixed underlying type of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uint8&lt;/code&gt;, allowing it to hold values ranging from 0 to 255. Note that the class name is prefixed with an “E” (i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ECustomGrabType&lt;/code&gt;) instead of simply being called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CustomGrabType&lt;/code&gt;. This naming convention follows the Epic C++ &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/epic-cplusplus-coding-standard-for-unreal-engine&quot;&gt;Coding Standard&lt;/a&gt; for Unreal Engine.&lt;/p&gt;

&lt;p&gt;The subsequent lines define the individual enumeration values: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;None&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Free&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Snap&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Custom&lt;/code&gt;. Each value is assigned a display name using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UMETA(DisplayName = &quot;...&quot;)&lt;/code&gt; macro. These display names enhance readability and can be accessed within Unreal Engine’s Blueprint system.&lt;/p&gt;

&lt;h2 id=&quot;grabcomponent&quot;&gt;GrabComponent&lt;/h2&gt;
&lt;p&gt;Next, we will implement the &lt;strong&gt;GrabComponent&lt;/strong&gt; in C++. Begin by opening your project in the Unreal Editor. Navigate to Tools &amp;gt; New C++ Class… &amp;gt; Common Classes &amp;gt; Scene Component and click Next. Set the class type to Private and name the class &lt;strong&gt;CustomGrabComponent&lt;/strong&gt;. Then, click Create Class.&lt;/p&gt;

&lt;p&gt;Visual Studio will open, and you may need to reload your project files. After that, build your project. If you did not start the Unreal Editor from Visual Studio by selecting Start New Instance, but instead opened the project file from your file explorer or launched the editor from the Epic Games Launcher, you might encounter the following error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The command &quot;&quot;C:\W\Epic Games\UE_5.4\Engine\Build\BatchFiles\Build.bat&quot; VRTutorialEditor Win64 Development -Project=&quot;E:\Unreal Projects\VRTutorial\VRTutorial.uproject&quot; -WaitMutex -FromMsBuild -architecture=x64&quot; exited with code 6.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To resolve this error, close the Unreal Editor and build the project again.&lt;/p&gt;

&lt;h3 id=&quot;customgrabcomponenth&quot;&gt;CustomGrabComponent.h&lt;/h3&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Fill out your copyright notice in the Description page of Project Settings.&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#pragma once
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Unreal Engine headers&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CoreMinimal.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;Components/SceneComponent.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;MotionControllerComponent.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;Haptics/HapticFeedbackEffect_Base.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;Kismet/GameplayStatics.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;Net/UnrealNetwork.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Project headers&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CustomGrabType.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// The .generated.h file must be the last include&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CustomGrabComponent.generated.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DECLARE_DYNAMIC_MULTICAST_DELEGATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FGrabEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// https://www.reddit.com/r/unrealengine/comments/zygcku/ue51_is_unable_to_find_delegate_in_same_file/&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;UCLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Custom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintSpawnableComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USceneComponent&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;GENERATED_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Sets default values for this component&apos;s properties&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Called every frame&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TickComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DeltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ELevelTick&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TickType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FActorComponentTickFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThisTickFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintCallable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TryGrab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UMotionControllerComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AActor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintCallable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TryRelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintCallable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SetShouldSimulateOnDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintCallable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SetPrimitiveCompPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bSimulate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintPure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Grab Component&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintAssignable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;FGrabEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnGrabbed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlueprintAssignable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;FGrabEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnDropped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;protected:&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Called when the game starts&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeginPlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;private:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AttachParentToMotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USceneComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Client function for setting the MotionControllerRef and owner on the client side&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Reliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClientSetMotionControllerRefAndOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UMotionControllerComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AActor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Client function for removing the MotionControllerRef and owner on the client side&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Reliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClientRemoveMotionControllerRefAndOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Server function for grabbing&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Reliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServerGrab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Client function for playing the OnGrabHapticEffect on the client side&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unreliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClientPlayOnGrabHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditAnywhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GrabType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//The haptic effect played when this GrabComponent is grabbed&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditAnywhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UHapticFeedbackEffect_Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnGrabHapticEffect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditAnywhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Transient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AdvancedDisplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Property to replicate with RepNotify&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditAnywhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AdvancedDisplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UMotionControllerComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionControllerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditAnywhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AdvancedDisplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrimaryGrabComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditAnywhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Transient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AdvancedDisplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;FRotator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrimaryGrabRelativeRotation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FRotator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZeroRotator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditAnywhere&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AdvancedDisplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bSimulateOnDrop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;customgrabcomponentcpp&quot;&gt;CustomGrabComponent.cpp&lt;/h3&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Fill out your copyright notice in the Description page of Project Settings.&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CustomGrabComponent.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Sets default values for this component&apos;s properties&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Set this component to be initialized when the game starts, and to be ticked every frame.  You can turn these features&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// off to improve performance if you don&apos;t need them.&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;PrimaryComponentTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bCanEverTick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;OnGrabHapticEffect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UHapticFeedbackEffect_Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Haptics/GrabHapticEffect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Replicate this component&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;SetIsReplicatedByDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Called every frame&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TickComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DeltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ELevelTick&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TickType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FActorComponentTickFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThisTickFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TickComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DeltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TickType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThisTickFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TryGrab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UMotionControllerComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AActor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;SetPrimitiveCompPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;AttachParentToMotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Snap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;SetPrimitiveCompPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;AttachParentToMotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetRelativeRotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetRelativeRotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetInverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ETeleportType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TeleportPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;FVector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NewLocation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponentLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponentLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponentLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWorldLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ETeleportType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TeleportPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Custom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GetOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;MotionControllerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ClientSetMotionControllerRefAndOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TryRelease&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Snap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bSimulateOnDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;SetPrimitiveCompPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;FDetachmentTransformRules&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DetachmentRules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;EDetachmentRule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeepWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;EDetachmentRule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeepWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;EDetachmentRule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeepWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DetachFromComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DetachmentRules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECustomGrabType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Custom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;OnDropped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Broadcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;MotionControllerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ClientRemoveMotionControllerRefAndOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// I don&apos;t think this is necessary.&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetShouldSimulateOnDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UPrimitiveComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrimitiveComp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UPrimitiveComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PrimitiveComp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrimitiveComp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsAnySimulatingPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;bSimulateOnDrop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetPrimitiveCompPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bSimulate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UPrimitiveComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrimitiveComp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UPrimitiveComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PrimitiveComp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;PrimitiveComp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetSimulatePhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bSimulate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#if UE_BUILD_DEVELOPMENT
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;FString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ErrorMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;GrabComponent-&amp;gt;SetSimulatingParent-&amp;gt;Cast To PrimitiveComponent FAILED&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddOnScreenDebugMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ErrorMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;UE_LOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Warning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErrorMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionControllerRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionSource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;LeftGrip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Called when the game starts&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeginPlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeginPlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;SetShouldSimulateOnDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UPrimitiveComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PrimitiveComp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UPrimitiveComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;PrimitiveComp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetCollisionProfileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PhysicsActor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AttachParentToMotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USceneComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;FAttachmentTransformRules&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AttachmentRules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;EAttachmentRule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeepWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;EAttachmentRule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeepWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;EAttachmentRule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeepWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AttachToComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AttachmentRules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#if UE_BUILD_DEVELOPMENT
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;FString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ErrorMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Attaching&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetAttachParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;to&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FAILED - object not grabbed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GEngine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddOnScreenDebugMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ErrorMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;UE_LOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Warning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ErrorMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientSetMotionControllerRefAndOwner_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UMotionControllerComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AActor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetOwnerRole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROLE_Authority&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;cm&quot;&gt;/*
		   Set the VRPawn as the owner of this actor&apos;s owner. If we don&apos;t do this then the function ServerGrab() will not be executed on the server because the owner is not set.
		   For the listen server client we don&apos;t have this problem because the owner is already set in the TryGrab() function and this function is executed on the server.
		*/&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GetOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;MotionControllerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ServerGrab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientRemoveMotionControllerRefAndOwner_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetOwnerRole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROLE_Authority&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// Set the owner to nullptr&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GetOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;MotionControllerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerGrab_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;OnGrabbed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Broadcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ClientPlayOnGrabHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientPlayOnGrabHapticEffect_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnGrabHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;UGameplayStatics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnGrabHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When you compile your code, the following linker error appears:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unresolved external symbol &quot;__declspec(dllimport) class UClass * __cdecl Z_Construct_UClass_UMotionControllerComponent_NoRegister(void)&quot; (__imp_?Z_Construct_UClass_UMotionControllerComponent_NoRegister@@YAPEAVUClass@@XZ) referenced in function &quot;void __cdecl `dynamic initializer for &apos;public: static struct UECodeGen_Private::FObjectPropertyParams const Z_Construct_UFunction_UCustomGrabComponent_ClientSetMotionControllerRefAndOwner_Statics::NewProp_MotionController&apos;&apos;(void)&quot; (??__E?NewProp_MotionController@Z_Construct_UFunction_UCustomGrabComponent_ClientSetMotionControllerRefAndOwner_Statics@@2UFObjectPropertyParams@UECodeGen_Private@@B@@YAXXZ)	

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This error indicates that the definition for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UMotionControllerComponent&lt;/code&gt; could not be found. The class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UMotionControllerComponent&lt;/code&gt; is defined in the &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/API/Runtime/HeadMountedDisplay&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HeadMountedDisplay&lt;/code&gt;&lt;/a&gt; module. To resolve this, you need to add this module to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PrivateDependencyModuleNames&lt;/code&gt; array in the VRTutorial.Build.cs file.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Fill out your copyright notice in the Description page of Project Settings.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;UnrealBuildTool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VRTutorial&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModuleRules&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;VRTutorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadOnlyTargetRules&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;PCHUsage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PCHUsageMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UseExplicitOrSharedPCHs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;PublicDependencyModuleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Core&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;CoreUObject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Engine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;InputCore&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;PrivateDependencyModuleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HeadMountedDisplay&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// Uncomment if you are using Slate UI&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// PrivateDependencyModuleNames.AddRange(new string[] { &quot;Slate&quot;, &quot;SlateCore&quot; });&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// Uncomment if you are using online features&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// PrivateDependencyModuleNames.Add(&quot;OnlineSubsystem&quot;);&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// To include OnlineSubsystemSteam, add it to the plugins section in your uproject file with the Enabled attribute set to true&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After adding the module and recompiling your code, the linker error should be resolved. If the C++ Classes folder does not appear in the Content Browser, open the VRTutorial.uproject file in a text editor and add the following:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;Modules&quot;: [
	{
		&quot;Name&quot;: &quot;VRTutorial&quot;,
		&quot;Type&quot;: &quot;Runtime&quot;,
		&quot;LoadingPhase&quot;: &quot;Default&quot;,
		&quot;AdditionalDependencies&quot;: [
			&quot;Engine&quot;
		]
	}
],
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If you didn’t name the project VRTutorial, replace it with your project’s name. A quick shoutout to &lt;a href=&quot;https://forums.unrealengine.com/t/c-classes-not-showing-up-in-content-browser/86053/24&quot;&gt;fkrstevski&lt;/a&gt; for this solution.&lt;/p&gt;

&lt;h3 id=&quot;time-to-explain-a-few-things-1&quot;&gt;Time to explain a few things&lt;/h3&gt;
&lt;p&gt;When you examine the &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; code, you’ll notice it closely resembles the Blueprint &lt;strong&gt;GrabComponent&lt;/strong&gt; from our &lt;a href=&quot;./unreal-engine-multiplayer-virtual-reality&quot;&gt;previous tutorial&lt;/a&gt;. However, this time we set the entire &lt;strong&gt;MotionControllerRef&lt;/strong&gt; on the client side, instead of just the result of the &lt;strong&gt;GetHeldByHand&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;To explain how I arrived at the current implementation and why we should use the approach from the previous tutorial instead, we need to establish a starting point. In the previous tutorial, we set the result of the &lt;strong&gt;GetHeldByHand&lt;/strong&gt; function on the client side as follows.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/CustomGrabComponent/OnGrabbedAndOnDroppedFromPreviousTutorial.png&quot; alt=&quot;Blueprint OnGrabbed and OnDropped events in the Pistol event graph from the previous tutorial&quot; title=&quot;On grabbed and on dropped from previous tutorial&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;By replicating the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; variable from the &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; class, we eliminate the need to pass the result of the &lt;strong&gt;GetHeldByHand&lt;/strong&gt; function to the &lt;strong&gt;GrabOnOwningClient&lt;/strong&gt; and &lt;strong&gt;DropOnOwningClient&lt;/strong&gt; RPCs. This simplifies the logic on the &lt;strong&gt;Pistol&lt;/strong&gt; event graph&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/CustomGrabComponent/PistolNetworkedOnGrabbedAndOnDropped.png&quot; alt=&quot;A simplified version of the Blueprint OnGrabbed and OnDropped events in the Pistol event graph&quot; title=&quot;Simplified on grabbed and on dropped&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;To replicate the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; variable from the &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; class, we need to add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Replicated&lt;/code&gt; specifier to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPROPERTY&lt;/code&gt;. However, even though the property will be replicated, there is no guarantee that the replication will occur before the &lt;strong&gt;GrabOnOwningClient&lt;/strong&gt; RPC is called, or before the &lt;strong&gt;GetHeldByHand&lt;/strong&gt; function is executed in the &lt;strong&gt;Pistol&lt;/strong&gt;’s event graph. This can happen even though the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; is set before the &lt;strong&gt;OnGrabbed&lt;/strong&gt; event dispatcher is called in the &lt;strong&gt;TryGrab&lt;/strong&gt; function.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/CustomGrabComponent/TryGrabFromPreviousTutorial.png&quot; alt=&quot;Blueprint TryGrab function from the previous tutorial&quot; title=&quot;Try grab from previous tutorial&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;If the &lt;strong&gt;GetHeldByHand&lt;/strong&gt; function is called before the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; is set on the client side, it will result in the following warning and error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LogScript: Warning: Accessed None trying to read property MotionControllerRef
    GrabComponent_C /Game/VRTemplate/Maps/UEDPIE_1_VRTemplateMap.VRTemplateMap:PersistentLevel.Pistol_00.GrabComponentSnap
    Function /Game/VRTemplate/Blueprints/GrabComponent.GrabComponent_C:GetHeldByHand:0047
PIE: Error: Blueprint Runtime Error: &quot;Accessed None trying to read property MotionControllerRef&quot;. Node:  Return Node Graph:  GetHeldByHand Function:  Get Held by Hand Blueprint:  GrabComponent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;repnotify-to-the-rescue&quot;&gt;RepNotify to the rescue!&lt;/h4&gt;
&lt;p&gt;To ensure that the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; is set before the &lt;strong&gt;OnGrabbed&lt;/strong&gt; event dispatcher is called, we can use a &lt;strong&gt;RepNotify&lt;/strong&gt;. This &lt;strong&gt;RepNotify&lt;/strong&gt; function can then trigger a server RPC that calls the &lt;strong&gt;OnGrabbed&lt;/strong&gt; event dispatcher. At this point, you might want to stop me, as you may have started to notice that we are going to perform two network calls for something we previously accomplished with just one. But you &lt;a href=&quot;https://www.youtube.com/watch?v=RKmKEow9ues&amp;amp;ab_channel=%21K7Records&quot;&gt;can’t stop me now&lt;/a&gt;. We are at the entrance of a very interesting rabbit hole.&lt;/p&gt;

&lt;p&gt;First, it’s important to note the &lt;a href=&quot;https://vorixo.github.io/devtricks/stateful-events-multiplayer/#onreps&quot;&gt;differences&lt;/a&gt; between &lt;strong&gt;RepNotify&lt;/strong&gt; in Blueprint and C++. In Blueprint, the &lt;strong&gt;RepNotify&lt;/strong&gt; is executed on both the client and the server. In contrast, in C++, the &lt;strong&gt;RepNotify&lt;/strong&gt; is only executed on the clients. Additionally, if the variable remains unchanged, the &lt;strong&gt;RepNotify&lt;/strong&gt; is not called in both Blueprint and C++. In C++, we can change a variable by setting a pointer to nullptr. In Blueprint, a variable can be cleared by setting it without any input. Unfortunately, when I attempted this method in both C++ and Blueprint, the &lt;strong&gt;RepNotify&lt;/strong&gt; was not called, even though the variable’s value had changed. However, in C++, you have the &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/replicate-actor-properties-in-unreal-engine?application_version=5.4&quot;&gt;option&lt;/a&gt; to force the &lt;strong&gt;RepNotify&lt;/strong&gt; to execute on every call, even when the variable doesn’t change. This can be achieved by setting the flag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REPNOTIFY_Always&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DOREPLIFETIME_CONDITION_NOTIFY()&lt;/code&gt; function. This did the trick.&lt;/p&gt;

&lt;p&gt;Unfortunately, a &lt;strong&gt;RepNotify&lt;/strong&gt; will not work in this scenario for two reasons. First, as mentioned earlier, the &lt;strong&gt;RepNotify&lt;/strong&gt; is executed only on the clients and not on the server in C++. A potential solution might be to call the &lt;strong&gt;RepNotify&lt;/strong&gt; function manually for the client acting as the listen server. However, it’s impossible to distinguish between a “normal” client and the listen server client, which means you would need to call the &lt;strong&gt;RepNotify&lt;/strong&gt; for every client. You can see the call hierarchy in the following code snippet.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TryGrab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UMotionControllerComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AActor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bIsHeld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GetOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;MotionControllerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotionController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;OnRep_MotionControllerRefUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnRep_MotionControllerRefUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Call OnGrabbed on server&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ServerGrab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerGrab_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;OnGrabbed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Broadcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UGameplayStatics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnGrabHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientGrab_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFirstPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Enable input for the player controller&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EnableInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ULocalPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetLocalPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputLocalPlayerSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputSubSystem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputLocalPlayerSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TCHAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Input/IMC_Weapon_Right.IMC_Weapon_Right&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Input/IMC_Weapon_Left.IMC_Weapon_Left&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;// Hard reference load&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputMappingContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputMappingContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputMappingContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// Add the InputMappingContext to the Subsystem&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;InputSubSystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddMappingContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputMappingContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;n&quot;&gt;BindPistolInputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionControllerRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MotionSource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;LeftGrip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Problem solved, right? Well, not exactly. The &lt;strong&gt;RepNotify&lt;/strong&gt; function is called when the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; is set on the client. If we manually call the &lt;strong&gt;RepNotify&lt;/strong&gt; function, it can be executed before the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; is set. This isn’t an issue for the listen server client, as the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; is already set on the server and, consequently, on the client since they are the same. However, it becomes more complicated for other clients. There’s a chance that the replicated variable is not yet set on those clients when it’s requested (as seen in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GetHeldByHand()&lt;/code&gt; function), which could lead to a crash due to a nullptr. While the listen server doesn’t face this problem, as the replicated variable is set on the server and directly accessible by the client, distinguishing between the listen server client and other clients to call the &lt;strong&gt;RepNotify&lt;/strong&gt; function selectively is not feasible.&lt;/p&gt;

&lt;p&gt;Remember when I mentioned that there are two reasons why a &lt;strong&gt;RepNotify&lt;/strong&gt; will not work? So far, we’ve only covered the first reason. Don’t worry! I’ll keep it brief for the second reason. The &lt;strong&gt;RepNotify&lt;/strong&gt; function needs to call the server RPC responsible for calling the &lt;strong&gt;OnGrabbed&lt;/strong&gt; event dispatcher. This server RPC will be executed for the client acting as the listen server, but it won’t run for other clients. The issue arises because the owner of the &lt;strong&gt;CustomGrabComponent&lt;/strong&gt;’s owner is not set on these clients. Furthermore, since &lt;strong&gt;RepNotify&lt;/strong&gt; functions cannot have parameters, we cannot pass an owner to be set on the client side.&lt;/p&gt;

&lt;h4 id=&quot;rpcs-then&quot;&gt;RPCs then?&lt;/h4&gt;
&lt;p&gt;The only viable option left is to use an RPC that runs on the owning client, sets the owner, and calls the server RPC upon a successful grab. Similarly, on a successful drop, an RPC runs on the owning client to remove the owner.&lt;/p&gt;

&lt;p&gt;By now, you can probably see why it would be much easier and better to simply send the result of the &lt;strong&gt;GetHeldByHand&lt;/strong&gt; function as an argument with the &lt;strong&gt;GrabOnOwningClient&lt;/strong&gt; and &lt;strong&gt;DropOnOwningClient&lt;/strong&gt; RPCs.&lt;/p&gt;

&lt;h2 id=&quot;pistol&quot;&gt;Pistol&lt;/h2&gt;
&lt;p&gt;Next, we will implement the &lt;strong&gt;Pistol&lt;/strong&gt; in C++. Begin by opening your project in the Unreal Editor. Navigate to Tools &amp;gt; New C++ Class… &amp;gt; Common Classes &amp;gt; Actor, then click Next. Set the class type to Public and name the class &lt;strong&gt;CustomPistol&lt;/strong&gt;. Click Create Class. Visual Studio will open, and you may need to reload all the project files. Once that’s done, build the project.&lt;/p&gt;

&lt;h3 id=&quot;custompistolh&quot;&gt;CustomPistol.h&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Fill out your copyright notice in the Description page of Project Settings.&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#pragma once
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Unreal Engine headers&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CoreMinimal.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;GameFramework/Actor.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;EnhancedInputSubsystems.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;InputMappingContext.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;EnhancedInputComponent.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;Engine/StreamableManager.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;Engine/AssetManager.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Project headers&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CustomGrabComponent.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// The .generated.h file must be the last include&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CustomPistol.generated.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;UCLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VRTUTORIAL_API&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AActor&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;GENERATED_BODY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Sets default values for this actor&apos;s properties&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Called every frame&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DeltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;protected:&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Called when the game starts or when spawned&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeginPlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;private:&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// Client function for grabbing&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Reliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClientGrab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BindPistolInputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Client funtion for dropping&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Reliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClientDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RemovePistolInputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unreliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServerShootLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unreliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServerShootRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Shoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UFUNCTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unreliable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClientPlayPistolFireHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VisibleInstanceOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;USkeletalMeshComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VisibleInstanceOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UPROPERTY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VisibleInstanceOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;USceneComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MuzzleLocation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UHapticFeedbackEffect_Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PistolFireHapticEffect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FInputBindingHandle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShootLeftBindingHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FInputBindingHandle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShootRightBindingHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;custompistolcpp&quot;&gt;CustomPistol.cpp&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Fill out your copyright notice in the Description page of Project Settings.&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;CustomPistol.h&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Sets default values&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don&apos;t need it.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PrimaryActorTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bCanEverTick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Create and attach the SkeletalMeshGun to the actor&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateDefaultSubobject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USkeletalMeshComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SkeletalMeshGun&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;RootComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Load the SkeletalMesh and Material&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USkeletalMesh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SkeletalMesh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USkeletalMesh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/FPWeapon/Mesh/SK_FPGun&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//SkeletalMeshGun-&amp;gt;SetSkeletalMesh(SkeletalMesh);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetSkeletalMeshAsset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkeletalMesh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UMaterialInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SkeletalMeshMaterial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UMaterialInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/FPWeapon/Materials/M_FPGun_C++&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetMaterial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SkeletalMeshMaterial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Scale the SkeletalMeshGun&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWorldScale3D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set the SkeletalMeshGun&apos;s physics settings&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetSimulatePhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set the SkeletalMeshGun&apos;s collision settings&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetGenerateOverlapEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetCollisionProfileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PhysicsActor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Create and attach the GrabComponentSnap to the actor&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateDefaultSubobject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UCustomGrabComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GrabComponentSnap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetupAttachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set the GrabComponentSnap&apos;s location and rotation&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWorldLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000012&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;449529&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;700515&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWorldRotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FRotator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0001&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;83&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0000&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000064&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Create and attach the MuzzleLocation to the actor&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MuzzleLocation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateDefaultSubobject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USceneComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MuzzleLocation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MuzzleLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetupAttachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set the MuzzleLocation&apos;s location and rotation&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MuzzleLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWorldLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MuzzleLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWorldRotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FRotator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000137&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Load the PistolFireHapticEffect&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PistolFireHapticEffect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UHapticFeedbackEffect_Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Haptics/PistolFireHapticEffect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set the Replicates variable to true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bReplicates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set the ReplicateMovement variable to true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SetReplicateMovement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Set the IsReplicated variable to true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SkeletalMeshGun&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetIsReplicated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Called every frame&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DeltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DeltaTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Called when the game starts or when spawned&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeginPlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeginPlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Add ClientGrab to the OnGrabbed event dispatcher&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnGrabbed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddDynamic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientGrab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnDropped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddDynamic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientGrab_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFirstPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Enable input for the player controller&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EnableInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ULocalPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetLocalPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputLocalPlayerSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputSubSystem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputLocalPlayerSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;cm&quot;&gt;/*
                    Get the InputMappingContext from the existing file

                    &quot;/Game/VRTemplate/Input/IMC_Weapon_Right.IMC_Weapon_Right&quot;
                    ----------------------------------------------------------
                    This is the fully qualified reference to both the package and the specific object within that package. The part before the period refers to the package (the .uasset file).
                    The part after the period (.) explicitly refers to the name of the object inside that package.
                    It&apos;s useful when you want to be absolutely certain about loading a specific object, especially if the package contains multiple assets.

                    &quot;/Game/VRTemplate/Input/IMC_Weapon_Right&quot;
                    -----------------------------------------
                    This path is simplified and refers to the package or asset, assuming that the asset&apos;s name inside the package matches the package&apos;s name (which is usually the case).
                    It omits the explicit reference to the object within the package. Unreal assumes that you&apos;re referring to the object whose name matches the package name
                    (in this case, IMC_Weapon_Right inside the IMC_Weapon_Right.uasset package).
                */&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TCHAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Input/IMC_Weapon_Right.IMC_Weapon_Right&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Input/IMC_Weapon_Left.IMC_Weapon_Left&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;// Hard reference load&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputMappingContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputMappingContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputMappingContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// Add the InputMappingContext to the Subsystem&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;InputSubSystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddMappingContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputMappingContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;n&quot;&gt;BindPistolInputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                &lt;span class=&quot;cm&quot;&gt;/*
                // Set the soft object pointer path
                TSoftObjectPtr&amp;lt;UInputMappingContext&amp;gt; InputMappingContext = TSoftObjectPtr&amp;lt;UInputMappingContext&amp;gt;(FSoftObjectPath(Name));

                // Soft reference synchronous load
                InputMappingContext.LoadSynchronous();

                // Add the input mapping context to the input system
                if (InputMappingContext.IsValid())
                {
                    InputSubSystem-&amp;gt;AddMappingContext(InputMappingContext.Get(), 1);
                }
                */&lt;/span&gt;

                &lt;span class=&quot;cm&quot;&gt;/*
                // Set the soft object pointer path
                TSoftObjectPtr&amp;lt;UInputMappingContext&amp;gt; InputMappingContext = TSoftObjectPtr&amp;lt;UInputMappingContext&amp;gt;(FSoftObjectPath(Name));

                // Soft reference asynchronous load
                TSharedPtr&amp;lt;FStreamableHandle&amp;gt; Handle = UAssetManager::GetStreamableManager().RequestAsyncLoad(InputMappingContext.ToSoftObjectPath(), FStreamableDelegate::CreateLambda([=]()
                {
                    if (InputMappingContext.IsValid())
                    {
                        InputSubSystem-&amp;gt;AddMappingContext(InputMappingContext.Get(), 1);
                        UE_LOG(LogTemp, Log, TEXT(&quot;Asset Loaded: %s&quot;), *InputMappingContext.Get()-&amp;gt;GetName());
                    }
                }));
                */&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;UE_LOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Warning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ClientGrab_Implementation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindPistolInputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFirstPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EnhancedInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IA_Shoot_Left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Input/Actions/IA_Shoot_Left.IA_Shoot_Left&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;ShootLeftBindingHandle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnhancedInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IA_Shoot_Left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ETriggerEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Started&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerShootLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IA_Shoot_Right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Input/Actions/IA_Shoot_Right.IA_Shoot_Right&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;ShootRightBindingHandle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnhancedInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BindAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IA_Shoot_Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ETriggerEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Started&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerShootRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientDrop_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFirstPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Disable input for the player controller&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DisableInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ULocalPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalPlayer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetLocalPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputLocalPlayerSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputSubSystem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalPlayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputLocalPlayerSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Get the InputMappingContext from the existing file&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TCHAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Input/IMC_Weapon_Right.IMC_Weapon_Right&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Input/IMC_Weapon_Left.IMC_Weapon_Left&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;// Hard reference load&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputMappingContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputMappingContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UInputMappingContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// Remove the InputMappingContext from the Subsystem&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;InputSubSystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoveMappingContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputMappingContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;n&quot;&gt;RemovePistolInputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemovePistolInputActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFirstPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EnhancedInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UEnhancedInputComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShootLeftBindingHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnhancedInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoveBinding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShootLeftBindingHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;UE_LOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ShootLeftBindingHandle removed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShootRightBindingHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnhancedInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoveBinding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShootRightBindingHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;UE_LOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ShootRightBindingHandle removed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;//EnhancedInput-&amp;gt;ClearBindingsForObject(this);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerShootLeft_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Shoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerShootRight_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EControllerHand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Shoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Shoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Set the MuzzleLocation&apos;s location and rotation&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;FTransform&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProjectileTransform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FTransform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MuzzleLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponentRotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MuzzleLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetComponentLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FVector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Spawn parameters for the projectile&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;FActorSpawnParameters&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SpawnParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SpawnParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SpawnParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instigator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFirstPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetPawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
        In Unreal Engine, every Blueprint has a unique path, and to access it in C++, you need the correct path including the _C suffix.
        If you try to load a Blueprint without the _C suffix, you are loading the Blueprint asset, not the class.
    */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProjectileClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AActor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Game/VRTemplate/Blueprints/Projectile.Projectile_C&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Spawn the projectile&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpawnActor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AActor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProjectileClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProjectileTransform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SpawnParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Play the haptic effect on the owning client&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ClientPlayPistolFireHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACustomPistol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClientPlayPistolFireHapticEffect_Implementation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PistolFireHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;UGameplayStatics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetPlayerController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PistolFireHapticEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GrabComponentSnap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetHeldByHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you try to build your project at this point, you will get the following error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cannot open include file: &apos;EnhancedInputSubsystems.h&apos;: No such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To resolve this, you need to add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;EnhancedInput&quot;&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PublicDependencyModuleNames&lt;/code&gt; in the VRTutorial.Build.cs file.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Fill out your copyright notice in the Description page of Project Settings.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;UnrealBuildTool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VRTutorial&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModuleRules&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;VRTutorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadOnlyTargetRules&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;PCHUsage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PCHUsageMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UseExplicitOrSharedPCHs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;PublicDependencyModuleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;EnhancedInput&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Core&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;CoreUObject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Engine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;InputCore&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;PrivateDependencyModuleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HeadMountedDisplay&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// Uncomment if you are using Slate UI&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// PrivateDependencyModuleNames.AddRange(new string[] { &quot;Slate&quot;, &quot;SlateCore&quot; });&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// Uncomment if you are using online features&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// PrivateDependencyModuleNames.Add(&quot;OnlineSubsystem&quot;);&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// To include OnlineSubsystemSteam, add it to the plugins section in your uproject file with the Enabled attribute set to true&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once you have done this, recompile your code.&lt;/p&gt;

&lt;h3 id=&quot;time-to-explain-a-few-things-2&quot;&gt;Time to explain a few things&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;IMC_Default&lt;/strong&gt;, &lt;strong&gt;IMC_Hands&lt;/strong&gt;, &lt;strong&gt;IMC_Menu&lt;/strong&gt;, &lt;strong&gt;IMC_Weapon_Left&lt;/strong&gt;, and &lt;strong&gt;IMC_Weapon_Right&lt;/strong&gt; contexts are applied immediately when the Enhanced Input subsystem is ready. To prevent automatic addition of Input Mapping Contexts, you can disable ‘Add Immediately’ under Enhanced Input in the Project Settings, as we manage the mapping contexts manually.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/CustomPistol/InputMappingContextsAddImmediatelyDisabled.png&quot; alt=&quot;Unreal Editor project settings where add immediately is disabled for the input mapping contexts&quot; title=&quot;Input mapping contexts add immediately disabled&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Notice that in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RemovePistolInputActions()&lt;/code&gt; function, the binding handles are used to remove the pistol’s input actions. While working on the C++ &lt;strong&gt;Pistol&lt;/strong&gt;, I encountered a bug where the input actions were bound twice. As a result, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShootLeftBindingHandle&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShootRightBindingHandle&lt;/code&gt; were overwritten in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BindPistolInputActions()&lt;/code&gt; function. This led to not all handles being properly removed when removing input actions. For example, if you grab the right weapon first, release it, then grab the left weapon, the handle for the right weapon remains. When you attempt to shoot, the lingering handle still calls the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ServerShootRight()&lt;/code&gt; function. This function calls &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GetHeldByHand()&lt;/code&gt;, which uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotionControllerRef&lt;/code&gt; to determine which hand holds the pistol. However, since &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotionControllerRef&lt;/code&gt; is set to nullptr after dropping the right weapon, the program crashes. To prevent such errors, you can opt to clear all bindings for the pistol object. A code snippet for this solution is commented out in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RemovePistolInputActions()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Another issue I encountered was that if a &lt;strong&gt;CustomPistol&lt;/strong&gt; was duplicated inside the Unreal Editor, you couldn’t shoot with the duplicated pistol (i.e. no projectiles were spawned). This problem was related to the &lt;strong&gt;OnGrabbed&lt;/strong&gt; delegate. Moving the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AddDynamic()&lt;/code&gt; function call from the constructor to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BeginPlay()&lt;/code&gt; function appeared to resolve the issue. I came across the solution &lt;a href=&quot;https://forums.unrealengine.com/t/adddynamic-not-working/299247/6&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;update-the-blueprint-code&quot;&gt;Update the Blueprint code&lt;/h3&gt;
&lt;p&gt;So far, we have created a C++ networked pistol. However, if you replace the Blueprint version with our &lt;strong&gt;CustomPistol&lt;/strong&gt; and try to grab it, you will notice that nothing happens. Why is that? When attempting to grab an object, only those with a grab component of the class &lt;strong&gt;GrabComponent&lt;/strong&gt; are considered. A better approach would be to create a base class for &lt;strong&gt;GrabComponent&lt;/strong&gt; and derive both &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; and the Blueprint &lt;strong&gt;GrabComponent&lt;/strong&gt; from it. However, for now, I will simply replace the Blueprint &lt;strong&gt;GrabComponent&lt;/strong&gt; references with &lt;strong&gt;CustomGrabComponent&lt;/strong&gt;. To do this, set the &lt;strong&gt;ComponentClass&lt;/strong&gt; parameter of the &lt;strong&gt;GetComponentsByClass&lt;/strong&gt; function in the &lt;strong&gt;GetGrabComponentNearMotionController&lt;/strong&gt; function of the &lt;strong&gt;VRPawn&lt;/strong&gt; class to &lt;strong&gt;CustomGrabComponent&lt;/strong&gt;.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-14/UpdateTheBlueprintCode/ChangeComponentClass.png&quot; alt=&quot;Blueprint code of the GetGrabComponentNearMotionController function of the VRPawn class where the ComponentClass argument of the GetComponentsByClass function is changed to CustomGrabComponent&quot; title=&quot;Change component class&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;If we compile the Blueprint code, we will encounter errors indicating that &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; is not compatible with &lt;strong&gt;GrabComponent&lt;/strong&gt;. To resolve these errors, address them one by one. This process includes updating all references to &lt;strong&gt;GrabComponent&lt;/strong&gt; in the &lt;strong&gt;GetGrabComponentNearMotionController&lt;/strong&gt; function and the event graph of the &lt;strong&gt;VRPawn&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once you’ve resolved all the errors and run the project, you will notice that the pistols don’t snap to your hand as they used to. This occurs because the &lt;strong&gt;GrabType&lt;/strong&gt; is set to &lt;strong&gt;Free&lt;/strong&gt; by default, and since the original &lt;strong&gt;GrabComponent&lt;/strong&gt; Blueprint didn’t include a &lt;strong&gt;SetGrabType&lt;/strong&gt; function, I did not implement it in C++. Therefore, you will need to set the &lt;strong&gt;GrabType&lt;/strong&gt; in the Unreal Editor. To do this, click on the pistol in your level, search for &lt;strong&gt;GrabType&lt;/strong&gt; in the Details panel, and set it to &lt;strong&gt;Snap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Another thing you may have noticed is that the collision profile name for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SkeletalMeshGun&lt;/code&gt; is set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PhysicsActor&lt;/code&gt; in the &lt;strong&gt;CustomPistol&lt;/strong&gt; constructor. However, this is repeated in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BeginPlay()&lt;/code&gt; function of &lt;strong&gt;CustomGrabComponent&lt;/strong&gt;, as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SkeletalMeshGun&lt;/code&gt; is the parent of &lt;strong&gt;CustomGrabComponent&lt;/strong&gt;. This led me to believe I could remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SetCollisionProfileName&lt;/code&gt; call from the &lt;strong&gt;CustomPistol&lt;/strong&gt; constructor. However, when I did so, the function call to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IsAnySimulatingPhysics()&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SetShouldSimulateOnDrop()&lt;/code&gt; function returned false, even though &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SetSimulatePhysics(true)&lt;/code&gt; is called for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SkeletalMeshGun&lt;/code&gt; in the &lt;strong&gt;CustomPistol&lt;/strong&gt; constructor.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USkeletalMeshComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsAnySimulatingPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int32&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BodyIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BodyIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bodies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BodyIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bodies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BodyIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsInstanceSimulatingPhysics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The reason for this behavior is that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bodies&lt;/code&gt; array is empty. However, when we set the collision profile name to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PhysicsActor&lt;/code&gt; for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SkeletalMeshGun&lt;/code&gt; in the &lt;strong&gt;CustomPistol&lt;/strong&gt; constructor, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bodies&lt;/code&gt; array is populated. At this point, I am not entirely sure why this occurs. If you have insights on this, please reach out.&lt;/p&gt;

&lt;h2 id=&quot;grabbable_smallcube&quot;&gt;Grabbable_SmallCube&lt;/h2&gt;
&lt;p&gt;Since we are now only looking for the &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; to grab objects, the &lt;strong&gt;Grabbable_SmallCube&lt;/strong&gt; instances are no longer grabbable. To resolve this, we can either replace the &lt;strong&gt;GrabComponent&lt;/strong&gt; of the &lt;strong&gt;Grabbable_SmallCube&lt;/strong&gt; with &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; or duplicate the &lt;strong&gt;Grabbable_SmallCube&lt;/strong&gt; and update the component in the duplicated version. The cubes in the &lt;strong&gt;VRTemplateMap&lt;/strong&gt; can then be replaced with the duplicated version. We will opt for the latter option. To do this, follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Duplicate the &lt;strong&gt;Grabbable_SmallCube&lt;/strong&gt; Blueprint and rename it to &lt;strong&gt;Custom_Grabbable_SmallCube&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Add the &lt;strong&gt;CustomGrab&lt;/strong&gt; as a component and rename it to &lt;strong&gt;CustomGrabComponent&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Set the scale of the &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; to match that of the original &lt;strong&gt;GrabComponent&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Delete the &lt;strong&gt;GrabComponent&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Compile the &lt;strong&gt;Custom_Grabbable_SmallCube&lt;/strong&gt; Blueprint class.&lt;/li&gt;
  &lt;li&gt;In the Outliner on the right-hand side of the &lt;strong&gt;VRTemplateMap&lt;/strong&gt;, select all instances of the &lt;strong&gt;Grabbable_SmallCube&lt;/strong&gt;. Right-click on the selected items and choose Replace Selected Actors with &amp;gt; &lt;strong&gt;Custom_Grabbable_SmallCube&lt;/strong&gt;. If the &lt;a href=&quot;https://forums.unrealengine.com/t/replace-selected-actor-does-not-apply-scale-values/1902492&quot;&gt;scale values&lt;/a&gt; are not applied correctly, you may need to replace the actors manually or adjust the scale manually. The latter option is likely to require less work.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;strong&gt;Cube_FireLogs&lt;/strong&gt; and &lt;strong&gt;SM_Ball_01&lt;/strong&gt; also have a grab component but do not have a Blueprint class. If you want to make these objects grabbable, select them in the Outliner of the &lt;strong&gt;VRTemplateMap&lt;/strong&gt; and replace the &lt;strong&gt;GrabComponent&lt;/strong&gt; with a &lt;strong&gt;CustomGrabComponent&lt;/strong&gt; in their respective details panels.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to create multiplayer virtual reality applications in Unreal Engine</title>
   <link href="https://www.lbvrgames.com/how-to/how-to-create-multiplayer-virtual-reality-applications-in-Unreal-Engine"/>
   <updated>2024-11-01T00:00:00+00:00</updated>
   <id>https://www.lbvrgames.com/how-to/how-to-create-multiplayer-virtual-reality-applications-in-Unreal-Engine</id>
   <content type="html">&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;CPU: Intel Core i5-13600KF&lt;/li&gt;
  &lt;li&gt;GPU: Inno3D GeForce RTX 4070 TWIN X2&lt;/li&gt;
  &lt;li&gt;RAM: 64 GB&lt;/li&gt;
  &lt;li&gt;OS:  Windows 10 Pro 22H2&lt;/li&gt;
  &lt;li&gt;UE:  5.4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This tutorial explains how to extend the Unreal Engine’s Virtual Reality (VR) template to support multiplayer. Since this tutorial assumes familiarity with the VR template, I will not explain its internal workings beyond what is necessary to understand the changes being made. By the end of this tutorial, you will have the fundamentals to start developing free-roam and multiplayer free-room VR content. If you have any questions, feel free to &lt;a href=&quot;mailto:tutorials@lbvrgames.com&quot;&gt;email us&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;project-setup&quot;&gt;Project setup&lt;/h2&gt;
&lt;p&gt;To start, launch the Unreal Engine, go to Games, and select Virtual Reality. Leave the default settings enabled, select the project location, and give it an appropriate name (e.g. MultiplayerVR). Next, click create.&lt;/p&gt;

&lt;p&gt;When developing a multiplayer game with Unreal, there are two types of servers that can be used. And yes, I am going to shamelessly quote the Unreal official documentation:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Dedicated server&lt;/strong&gt;: “&lt;em&gt;A dedicated server consists of a server that runs headlessly. This means that there are no clients playing directly in the dedicated server game instance. Every player comes from a connected, remote client. A headless server does not render any visuals and nobody is playing locally on the headless server.&lt;/em&gt;”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Listen server&lt;/strong&gt;: “&lt;em&gt;A listen server consists of a client hosting the game on their machine and acting as the server. Other clients connect to the hosting client and play the game on the hosting client’s instance. In this model, the hosting client is the authoritative host. This gives them an advantage over the connected clients as they are actively playing in the true game state.&lt;/em&gt;”&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this tutorial, we will only use the listen server approach. The reason for this is two-fold. First, I started extending the VR template to multiplayer because I am interested in developing LBVR games. In this context, a listen server makes more sense because an admin panel can be created based on a player who is not participating in the gameplay. Also, an LBVR game is most likely to be hosted on a LAN network, and therefore, the advantage of the player hosting the game will be less troublesome since the latency is much lower than in an MMORPG. Secondly, to set up a dedicated server, you need to build Unreal Engine from source, as this is not possible with a binary installation.&lt;/p&gt;

&lt;h2 id=&quot;vrpawn&quot;&gt;VRPawn&lt;/h2&gt;
&lt;h3 id=&quot;teleport&quot;&gt;Teleport&lt;/h3&gt;
&lt;p&gt;The teleport feature allows a player to move across the VR template’s level using the right thumbstick on the controller. For the sake of explanation, let’s assume we have a listen server with three players:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Player 1: a client connected to the server.&lt;/li&gt;
  &lt;li&gt;Player 2: a client connected to the server.&lt;/li&gt;
  &lt;li&gt;Player 3: a client connected to the server and hosting the game (i.e., the server).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s say that player 1 is teleporting. The new location is only visible on player 1’s game instance. In other words, players 2 and 3 don’t see player 1 move. Why is this, you may ask? Well, each player hosts their own version of the game called a game instance. When player 1 doesn’t inform the server that they have moved, the game instances of players 2 and 3 are not updated by the server. Therefore, we need to tell the server that we have moved. Better yet, we will tell the server that we want to move and let the server move a copy of our pawn, hosted on the server. Then the server tells players 2 and 3 to move their local copy of player 1. This is a very brief explanation of what is happening and why a player’s movement is not seen by the other players by default. To make this movement visible, we need to replicate the movement. A more in-depth explanation of networking in Unreal Engine can be found on their &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/networking-overview-for-unreal-engine&quot;&gt;Networking Overview&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;Now you may ask yourself: “How do I tell the server to move the player?” Great question! Let’s head over to the VRPawn Blueprint and discover this together. Open the Content Drawer, then navigate to VRTemplate &amp;gt; Blueprints &amp;gt; VRPawn. In the event graph, look for the Input Action Move - Teleport. This section contains the logic to teleport the VR pawn across our level.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/TeleportWithoutNetworking.png&quot; alt=&quot;Teleport Blueprint code without networking&quot; title=&quot;Teleport without networking&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Now, it is important to figure out which part should be executed on the server. The functions &lt;strong&gt;StartTeleportTrace&lt;/strong&gt;, &lt;strong&gt;TeleportTrace&lt;/strong&gt;, and &lt;strong&gt;EndTeleportTrace&lt;/strong&gt; are used to visualize where the player is going to be teleported. This is something that the other players don’t necessarily have to see. However, the actual teleportation is performed by the &lt;strong&gt;TryTeleport&lt;/strong&gt; function, and this is exactly what we want to execute on the server. But how do we do this? Well, Unreal has something called &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/remote-procedure-calls-in-unreal-engine&quot;&gt;&lt;strong&gt;Remote Procedure Calls (RPCs)&lt;/strong&gt;&lt;/a&gt;, which are defined as &lt;em&gt;functions called locally that execute remotely on one or more connected machines. RPCs help clients and the server call functions on one another over a network connection. RPCs are unidirectional function calls; as such, they cannot specify a return value.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To define such an RPC, right-click in the Event Graph and search for &lt;strong&gt;Add Custom Event&lt;/strong&gt;. When we create a custom event, a details panel appears on the right side. In this panel, we can name the event. In our case, let’s name it &lt;strong&gt;TryTeleportOnServer&lt;/strong&gt;. What we have done now is create a custom event that we can call from our code. However, if we call this event, it will still be executed on the client. To execute it on the server, we need to select the option &lt;strong&gt;Run on Server&lt;/strong&gt; from the &lt;strong&gt;Replicates&lt;/strong&gt; drop-down menu.&lt;/p&gt;

&lt;p&gt;Next, we need to define two inputs. The first input is a vector, which we will call &lt;strong&gt;Projected Teleport Location&lt;/strong&gt;. The second input is a boolean, which we will call &lt;strong&gt;Valid Teleport Location&lt;/strong&gt;. Both variables are used by the &lt;strong&gt;TryTeleport&lt;/strong&gt; function, which will be executed on the server but set by the &lt;strong&gt;TeleportTrace&lt;/strong&gt; function, which will be executed on the client. Therefore, these variables need to be transferred to the server. The settings for the &lt;strong&gt;TryTeleportOnServer&lt;/strong&gt; event are now:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/TryTeleportOnServerDetails.png&quot; alt=&quot;The TryTeleportOnServer details panel&quot; title=&quot;TryTeleportOnServer details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Instead of calling the &lt;strong&gt;TryTeleport&lt;/strong&gt; function on the client side, we will now call the custom event &lt;strong&gt;TryTeleportOnServer&lt;/strong&gt; on the client side. The Blueprint code will now be:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/TeleportWithNetworking.png&quot; alt=&quot;Teleport Blueprint code with networking&quot; title=&quot;Teleport with networking&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we need to replicate the VR pawn and its movement. On the left side, select the &lt;strong&gt;VRPawn&lt;/strong&gt; in the components panel. By default, as of writing this, the &lt;strong&gt;Replicates&lt;/strong&gt; and &lt;strong&gt;Replicate Movement&lt;/strong&gt; options are selected in the detail panel of the &lt;strong&gt;VRPawn&lt;/strong&gt;. However, if you try to teleport, you will notice that you are not able to teleport yourself, and the other clients only see your pawn moving around on the floor.&lt;/p&gt;

&lt;p&gt;Basically, there are two issues here. First, the client trying to teleport needs to be able to teleport itself. Secondly, we don’t want the pawn to lie on the floor. We are wearing the headset, so there should be an offset. To address the first problem, we need to replicate the &lt;strong&gt;VROrigin&lt;/strong&gt; component. This can be done by selecting the &lt;strong&gt;Component Replicates&lt;/strong&gt; option in the details panel.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/VROriginReplicationDetails.png&quot; alt=&quot;VROrigin replication details panel&quot; title=&quot;VROrigin replication details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;At this point, we could even disable the &lt;strong&gt;Replicates&lt;/strong&gt; and &lt;strong&gt;Replicate Movement&lt;/strong&gt; options of the &lt;strong&gt;VRPawn&lt;/strong&gt; and the replication will still work properly. I don’t know why this is happening and would need to delve deeper into the engine and its source code to figure this out. To address the second problem, we need to set the relative location of the camera on the server. The reason why will become clear in the next paragraph when we look into executing the snap turn on the server. For now, just accept this as a fact. The explanation will follow. Our Blueprint code will now look like this:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/TeleportWithNetworkingAndUpdatedCameraLocation.png&quot; alt=&quot;Teleport Blueprint code with networking and updated camera location&quot; title=&quot;Teleport with networking and updated camera location&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we need to replicate the &lt;strong&gt;Camera&lt;/strong&gt; component by selecting the &lt;strong&gt;Component Replicates&lt;/strong&gt; option in the details panel. Otherwise, the relative position will only be set on the server, and the other clients will still see the pawn lying on the ground.&lt;/p&gt;

&lt;h3 id=&quot;snap-turn&quot;&gt;Snap turn&lt;/h3&gt;
&lt;p&gt;To rotate in increments of 45 degrees, which we will call a snap turn, the player can use the left thumbstick on the controller. The only function here is the &lt;strong&gt;Snap Turn&lt;/strong&gt; function, which needs to be executed on the server. This function also has an input parameter called &lt;strong&gt;Right Turn&lt;/strong&gt;, which is a boolean that decides if the player should turn right or left. For those interested, &lt;a href=&quot;https://www.youtube.com/watch?v=1rQvPnKvlfk&quot;&gt;Marco Ghislanzoni&lt;/a&gt; provides a good explanation of snap rotation in VR.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/SnapTurnWithoutNetworking.png&quot; alt=&quot;Snap turn Blueprint code without networking&quot; title=&quot;Snap turn without networking&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;If we look inside the &lt;strong&gt;Snap Turn&lt;/strong&gt; function, we can see a few variables that are used to compute the new actor position (i.e. &lt;strong&gt;VRPawn&lt;/strong&gt;). These variables are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Snap Turn Degrees&lt;/strong&gt;: This defines the amount of rotation in degrees. It has a default value of 45 degrees, which is not changed during gameplay. Since both the client game instance and the server game instance have this value, we don’t need to send it to the server game instance.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Right Turn&lt;/strong&gt;: This defines whether the player turns right or left, derived from the left controller thumbstick, which is read on the client side. Therefore, this boolean needs to be sent from the client game instance to the server game instance.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Camera&lt;/strong&gt;: This is used for its world location and relative transform, which are used to compute the new &lt;strong&gt;VRPawn&lt;/strong&gt; position. The world location corresponds to the &lt;strong&gt;VRPawn&lt;/strong&gt; world location with an offset represented by the relative transform. We only need to send the relative transform of the &lt;strong&gt;Camera&lt;/strong&gt; to the server. The reason for this will be explained in the next paragraph.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;VRPawn&lt;/strong&gt; corresponds to the player’s start position, which in turn corresponds to the SteamVR center located on the ground. Initially, the headset position matches the player start position, so the &lt;strong&gt;VRPawn&lt;/strong&gt; and &lt;strong&gt;Camera&lt;/strong&gt; are at the same location since the &lt;strong&gt;Camera&lt;/strong&gt; is attached to the head-mounted display. However, once the headset moves away from the SteamVR center, a relative transform is introduced, representing the offset between the initial and current positions. When the VR headset is rotated, this rotation is reflected in the &lt;strong&gt;Camera&lt;/strong&gt;’s rotation. Consequently, the relative transform needs to be sent from the client game instance to the server game instance because the VR headset’s rotation is read on the client side, not on the server. Since the &lt;strong&gt;Camera&lt;/strong&gt;’s world location is the sum of the &lt;strong&gt;VRPawn&lt;/strong&gt;’s world location and the &lt;strong&gt;Camera&lt;/strong&gt;’s relative transform, only the relative transform needs to be sent to the server. The &lt;strong&gt;VRPawn&lt;/strong&gt;’s world location is already set by the &lt;strong&gt;TryTeleport&lt;/strong&gt; function, which runs on the server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: The boolean &lt;strong&gt;Right Turn&lt;/strong&gt; and the relative transform of the &lt;strong&gt;Camera&lt;/strong&gt; need to be sent to the server to execute the &lt;strong&gt;Snap Turn&lt;/strong&gt; function correctly on the server. The result should look like this:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/SnapTurnWithNetworking.png&quot; alt=&quot;Snap turn Blueprint code with networking&quot; title=&quot;Snap turn with networking&quot; /&gt;
&lt;/div&gt;

&lt;h3 id=&quot;location-based-virtual-reality&quot;&gt;Location-based virtual reality&lt;/h3&gt;
&lt;p&gt;At this point, it is possible to teleport and snap turn in a multiplayer environment. But what happens when we start walking and looking around without using our controllers to initiate these actions? Well, this is an interesting question. Remember that we saw earlier that the &lt;strong&gt;Camera&lt;/strong&gt; has a relative offset with respect to the &lt;strong&gt;VRPawn&lt;/strong&gt; and that the &lt;strong&gt;Camera&lt;/strong&gt; is attached to our VR headset? This means that if we start walking around and/or rotating our head, the &lt;strong&gt;Camera&lt;/strong&gt; will follow along. However, this happens only on the client’s game instance. This implies that when a player starts to walk around, the position on this client’s game instance differs from the server’s game instance and the game instances of the other clients connected to the server. In other words, a position mismatch occurs. How do we cope with this, you may ask? Well, let’s introduce the tick event. As stated in the &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/actor-ticking-in-unreal-engine?application_version=5.4&quot;&gt;official documentation&lt;/a&gt;, this event is used to update Actors each frame. To use the tick event, we need to make sure that the &lt;strong&gt;Start with Tick Enabled&lt;/strong&gt; option is checked in the Class Defaults details panel of the &lt;strong&gt;VRPawn&lt;/strong&gt;.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/VRPawnTick.png&quot; alt=&quot;VRPawn&apos;s Start with Tick Enabled option checked&quot; title=&quot;VRPawn Tick&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;If we send the &lt;strong&gt;Camera&lt;/strong&gt;’s relative transform to the server each frame and let the server update the player’s representation on the other clients, our movement will be synchronized. Does it matter that we only update our &lt;strong&gt;Camera&lt;/strong&gt; and not the &lt;strong&gt;VRPawn&lt;/strong&gt;? No, this doesn’t matter. As mentioned before, when we walk around, the position of the &lt;strong&gt;Camera&lt;/strong&gt; is updated, not the &lt;strong&gt;VRPawn&lt;/strong&gt; position. The relative transform between the &lt;strong&gt;Camera&lt;/strong&gt; and the &lt;strong&gt;VRPawn&lt;/strong&gt; will increase as we move farther away from our start position, but this is not a problem. Implementing this in Blueprint will result in the following:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/UpdateHeadMovementOnTheServer.png&quot; alt=&quot;Blueprint code to update the head movement on the server&quot; title=&quot;Update head movement on the server&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Just like with the teleport and snap turn, we create a custom event called &lt;strong&gt;UpdateCameraOnServer&lt;/strong&gt;, which we will execute on the server by setting the &lt;strong&gt;Replicates&lt;/strong&gt; option in the details panel of this event to &lt;strong&gt;Run on Server&lt;/strong&gt;. We also define an input parameter of type &lt;strong&gt;Transform&lt;/strong&gt;, which we call &lt;strong&gt;Camera Transform&lt;/strong&gt;. Notice how we check if the event tick is executed on a &lt;strong&gt;VRPawn&lt;/strong&gt; that is locally controlled. We do this because the event tick will also run on the server, and if we don’t include this check, we will see warnings stating: “No owning connection for actor VRPawn_C_XXXXXXXXXX,” since not all actors on the server have an owning connection. Finally, you’ll also see two white overlapping circles in the upper right corner of the &lt;strong&gt;Camera&lt;/strong&gt; variable. This indicates that we have replicated the &lt;strong&gt;Camera&lt;/strong&gt; by checking the &lt;strong&gt;Component Replicates&lt;/strong&gt; option in the details panel. If you have followed the previous paragraphs (i.e., Teleport and Snap Turn), then the &lt;strong&gt;Camera&lt;/strong&gt; component should already be replicated.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/CameraReplicationDetails.png&quot; alt=&quot;Camera replication details panel&quot; title=&quot;Camera replication details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The reason for replicating the &lt;strong&gt;Camera&lt;/strong&gt; is to ensure that when we set the camera’s relative transform on the server, the other connected clients are updated as well. In fact, we not only need to replicate the &lt;strong&gt;Camera&lt;/strong&gt; but also the &lt;strong&gt;VROrigin&lt;/strong&gt; because the &lt;strong&gt;Camera&lt;/strong&gt; is a child of the &lt;strong&gt;VROrigin&lt;/strong&gt;. For true LBVR (free-roam), we should disable the teleport and snap turn functionality; otherwise, a mismatch will occur between the relative positions of players in the real world and the virtual world. In LBVR, we want these relative positions to remain consistent. Another important point is that, at the moment, we have only one &lt;strong&gt;Player Start&lt;/strong&gt; in our level, which means all players spawn at the same position. For LBVR, this is ideal because it ensures that players maintain the same relative positions in both the real and virtual worlds. However, for free-roam, this isn’t desirable. In that case, each player joining the game needs a separate &lt;strong&gt;Player Start&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;hand-movement&quot;&gt;Hand movement&lt;/h3&gt;
&lt;p&gt;When we set up a listen server, connect a few clients, and start walking around, the clients should see each other move. Next, try waving to each other. What do you see? Not a damn thing! Why? Well, you probably guessed it already—we need to replicate our hand movements. This is actually very similar to what we did in the last section. However, this time we will be updating the &lt;strong&gt;Motion Controller Left Grip&lt;/strong&gt; and &lt;strong&gt;Motion Controller Right Grip&lt;/strong&gt; instead of the &lt;strong&gt;Camera&lt;/strong&gt;. Aside from that, it’s essentially a copy-paste of the previous section. The result should look like this:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/UpdateHeadAndHandMovementOnTheServer.png&quot; alt=&quot;Blueprint code to update the head and hand movement on the server&quot; title=&quot;Update head and hand movement on the server&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Well, wasn’t that easy for once :) Next up, hand animations!&lt;/p&gt;

&lt;h3 id=&quot;hand-animations&quot;&gt;Hand animations&lt;/h3&gt;
&lt;p&gt;At this point, you’re probably thinking, “Alright, alright, alright, I know what to do.” You open the VRPawn Blueprint, navigate to the hand animations section, and think to yourself, “Let’s do the same as we did for the teleport and snap turn.” You create custom events for each hand animation input, ensure these events are executed on the server, and pass the action values as inputs to these events. The final step is to replicate the pose variables. These variables are declared in the animation instance, which you can find under Content Drawer &amp;gt; Characters &amp;gt; MannequinsXR &amp;gt; Meshes &amp;gt; ABP_MannequinsXR. You click on each variable, check &lt;strong&gt;Replicated&lt;/strong&gt; under &lt;strong&gt;Replication&lt;/strong&gt; in the details panel, and you’re done!&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;You tested it, right? And let me guess—the other clients saw no hand animations whatsoever? I know what you’re thinking: “Well, Mr. Know-It-All, what’s the problem!” Hey, don’t blame me; blame the engine. One thing I didn’t mention is that replication doesn’t work for all features, and, as you probably guessed, Animation Blueprints are one of those things that don’t replicate. I’m not here to judge, but if you did read Unreal Engine’s &lt;a href=&quot;https://dev.epicgames.com/documentation/en-us/unreal-engine/networking-overview-for-unreal-engine&quot;&gt;Network Overview&lt;/a&gt; page, you would’ve seen this under the ‘Actor Replication’ section. But I have to be honest—I read it and still forgot when I was trying to figure this out myself. The solution I found and have used is from &lt;a href=&quot;https://www.youtube.com/watch?v=R3mPtalY4o4&amp;amp;ab_channel=CodeLikeMe&quot;&gt;CodeLikeMe&lt;/a&gt;, and it basically consists of the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    Create a custom event for each hand animation input, execute these events on the server, and pass the action values as inputs to them.
    &lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/PoseAlphaGraspLeftOnServerCall.png&quot; alt=&quot;Blueprint code to set the pose alpha left grasp on the server&quot; title=&quot;Pose alpha grasp left on server call&quot; /&gt;
    &lt;/div&gt;
  &lt;/li&gt;

  &lt;li&gt;
    Create a new variable called &lt;em&gt;PoseAlpha...&lt;/em&gt; in the VRPawn Blueprint. Essentially, you will be duplicating all variables that are present in the ABP_MannequinsXR.
    &lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/HandAnimationPoseVariables.png&quot; alt=&quot;Hand animation pose variables&quot; title=&quot;Hand animation pose variables&quot; /&gt;
    &lt;/div&gt;
  &lt;/li&gt;

  &lt;li&gt;
    Instead of setting the &lt;strong&gt;Replication&lt;/strong&gt; setting in the details panel to &lt;strong&gt;Replicated&lt;/strong&gt;, we are going to set it to &lt;strong&gt;RepNotify&lt;/strong&gt;.
    &lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/PoseAlphaGraspLeftHandReplicationDetails.png&quot; alt=&quot;Pose alpha grasp left hand replication details panel&quot; title=&quot;Pose alpha grasp left hand replication details&quot; /&gt;
    &lt;/div&gt;
  &lt;/li&gt;

  &lt;li&gt;
    Notice that under the functions list, a new function named &lt;strong&gt;OnRep_PoseAlpha...&lt;/strong&gt; is added. Inside this function, we include the logic that updates the hand animation.
    &lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/OnRepPoseAlphaGraspLeftHandFunction.png&quot; alt=&quot;Blueprint code of the OnRep pose alpha grasp left hand function&quot; title=&quot;OnRep pose alpha grasp left hand function&quot; /&gt;
    &lt;/div&gt;
  &lt;/li&gt;

  &lt;li&gt;
    Set the new &lt;strong&gt;PoseAlpha...&lt;/strong&gt; variable when the event is called.
    &lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/PoseAlphaGraspLeftOnServer.png&quot; alt=&quot;Blueprint code of the pose alpha grasp left on server event&quot; title=&quot;Pose alpha grasp left on server&quot; /&gt;
    &lt;/div&gt;
  &lt;/li&gt;

  &lt;li&gt;
    Repeat this process for the other pose variables. The final result should look like this:
    &lt;div align=&quot;center&quot;&gt;
        &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/HandAnimations.png&quot; alt=&quot;Blueprint code of the hand animations&quot; title=&quot;Hand animations&quot; /&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What we’ve done is create a new variable for each pose variable in the &lt;strong&gt;VRPawn&lt;/strong&gt; class. This variable will be set on the server, and because it’s replicated with &lt;strong&gt;RepNotify&lt;/strong&gt;, an OnRep function will be called on all connected clients whenever the variable is updated. As a result, the animation will be visible to all players. This works because the &lt;strong&gt;VRPawn&lt;/strong&gt; is an Actor, and Actors can replicate variables, unlike Animation Blueprints.&lt;/p&gt;

&lt;p&gt;Another approach would be to create two custom events for each hand animation. The first event is called and executed on the server, and it immediately triggers a second event, which is a multicast event executed on all clients. This method is explained in detail by &lt;a href=&quot;https://www.youtube.com/watch?v=s8j0RhW7xKE&quot;&gt;Gorka Games&lt;/a&gt;. When deciding which method to use, you’ll find sources advocating for &lt;strong&gt;RepNotify&lt;/strong&gt; as the preferred approach, while others argue that the multicast method is superior. I still need to explore this topic further to provide a definitive answer, but for now, I’ll stick with the &lt;strong&gt;RepNotify&lt;/strong&gt; approach.&lt;/p&gt;

&lt;h3 id=&quot;grab&quot;&gt;Grab&lt;/h3&gt;
&lt;p&gt;The final part of the &lt;strong&gt;VRPawn&lt;/strong&gt; that we need to adjust is the grabbing functionality. To achieve this, we will use the same techniques applied to the teleport and snap turn logic. Specifically, we’ll create a new custom event that will be executed on the server.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/GrabLeft.png&quot; alt=&quot;Blueprint code of the grab left action&quot; title=&quot;Grab left&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;When you try to grab one of the cubes or pistols, you’ll notice that their movement isn’t replicated to the other clients. This happens because we need to ensure that these objects themselves are set to replicate. This is separate from executing the grabbing functionality on the server.&lt;/p&gt;

&lt;h2 id=&quot;grabbable_smallcube&quot;&gt;Grabbable_SmallCube&lt;/h2&gt;
&lt;p&gt;Let’s open the &lt;strong&gt;Grabbable_SmallCube&lt;/strong&gt; Blueprint. You can find this Blueprint under Content Drawer &amp;gt; VRTemplate &amp;gt; Blueprints &amp;gt; Grabbable_SmallCube. On the left side, in the Components panel, you’ll see that this Actor consists of three components: &lt;strong&gt;Grabbable_SmallCube&lt;/strong&gt;, &lt;strong&gt;StaticMesh&lt;/strong&gt;, and &lt;strong&gt;GrabComponent&lt;/strong&gt;. To ensure that this object is replicated properly, we need to set the &lt;strong&gt;StaticMesh&lt;/strong&gt; component to replicate.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/GrabbableSmallCube/StaticMeshReplicationDetails.png&quot; alt=&quot;Static mesh replication details panel&quot; title=&quot;Static mesh replication details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Next, we need to replicate the actor itself.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/GrabbableSmallCube/GrabbableSmallCubeReplicationDetails.png&quot; alt=&quot;Grabbable small cube replication details panel&quot; title=&quot;Grabbable small cube replication details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;If we now grab this type of cube and interact with the world around us, these movements and interactions will be replicated to the other clients. Next, let’s look at the pistol.&lt;/p&gt;

&lt;h2 id=&quot;pistol&quot;&gt;Pistol&lt;/h2&gt;
&lt;p&gt;Replicating the pistol interactions is more complex than replicating the cube interactions. This is because we need to not only replicate its movement but also handle remapping the controllers on the client side, spawning the projectiles on the server, and replicating them to all other clients. First things first, let’s start with replicating the pistol movement. This is similar to what we did for the cube.&lt;/p&gt;

&lt;p&gt;Open the Content Drawer and navigate to VRTemplate &amp;gt; Blueprints &amp;gt; Pistol. In the Components window on the left side, you’ll see the hierarchy of this actor. The top level is the &lt;strong&gt;Pistol&lt;/strong&gt;. One level below, you’ll find the &lt;strong&gt;SkeletalMeshGun&lt;/strong&gt;. On the third and final level are the &lt;strong&gt;GrabComponentSnap&lt;/strong&gt; and &lt;strong&gt;MuzzleLocation&lt;/strong&gt;. The latter two do not need to be replicated, but the &lt;strong&gt;SkeletalMeshGun&lt;/strong&gt; does. So let’s start there.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/SkeletalMeshGunReplicationDetails.png&quot; alt=&quot;Static mesh gun replication details panel&quot; title=&quot;Static mesh gun replication details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Next, we need to replicate the actor itself.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/PistolReplicationDetails.png&quot; alt=&quot;Pistol replication details panel&quot; title=&quot;Pistol replication details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;So far, this process is very similar to what we did with the cube. At this point, we can grab the pistol, and its movement will be replicated to the other clients. However, if we try to fire the gun, nothing happens. We can even observe that the finger used to pull the trigger doesn’t bend. This indicates that the client is still using the default input mapping context instead of the weapon input mapping context. Since the grab action is performed on the server, the mapping context is changed on the server, but it needs to be updated on the client that initiated the grab action.&lt;/p&gt;

&lt;p&gt;To address this, we create a new custom event in the Pistol’s Event Graph. This time, we set the &lt;strong&gt;Replicates&lt;/strong&gt; setting to &lt;strong&gt;Run on Owning Client&lt;/strong&gt; and check the &lt;strong&gt;Reliable&lt;/strong&gt; checkbox to ensure that this event will always be called. We don’t want a player to grab a gun and not be able to use it properly.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/GrabOnOwningClientDetails.png&quot; alt=&quot;Grab on owning client details panel&quot; title=&quot;Grab on owning client details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;This event will be triggered when the GrabComponent’s On Grabbed event is called.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/PistolGrabbedAndDropped.png&quot; alt=&quot;Blueprint code to grab and drop the pistol&quot; title=&quot;Pistol grapped and dropped&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;When we try to grab the pistol and shoot again, we will notice that it still doesn’t work. Why is that? Well, the &lt;strong&gt;GrabOnOwningClient&lt;/strong&gt; event is being executed on the server because we didn’t set the client initiating the grab as the owner of the pistol on the server. To fix this, we create a new input for the &lt;strong&gt;TryGrab&lt;/strong&gt; function of the &lt;strong&gt;GrabComponent&lt;/strong&gt;. This input will be of type &lt;strong&gt;Actor&lt;/strong&gt; and will be called &lt;strong&gt;Actor&lt;/strong&gt;.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/GrabComponent/GrabComponentTryGrabInputs.png&quot; alt=&quot;GrabComponent&apos;s TryGrab function&apos;s inputs&quot; title=&quot;GrabComponent&apos;s TryGrab&apos;s inputs&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Now, we use this input to pass a reference to the &lt;strong&gt;VRPawn&lt;/strong&gt; that is trying to grab the weapon. This will be done in the &lt;strong&gt;VRPawn&lt;/strong&gt; Blueprint.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/VRPawn/PassVRPawnAsReferenceToTryGrab.png&quot; alt=&quot;Blueprint code where the VRPawn is passed as a reference to the TryGrab function&quot; title=&quot;Pass VRPawn as reference to TryGrab&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Inside the &lt;strong&gt;TryGrab&lt;/strong&gt; function, we will then set this actor as the owner of the object that is being grabbed.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/GrabComponent/SetOwnerInTryGrab.png&quot; alt=&quot;Blueprint code where the grabbed object&apos;s owner is set in the TryGrab function&quot; title=&quot;Set owner in TryGrab&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The function &lt;strong&gt;HeldByHand&lt;/strong&gt; from the &lt;strong&gt;GrabComponent&lt;/strong&gt; will be called on the owning client’s side. To ensure that the &lt;strong&gt;MotionControllerRef&lt;/strong&gt;, which is set on the server, has the appropriate value, we need to replicate the &lt;strong&gt;GrabComponentSnap&lt;/strong&gt; from the &lt;strong&gt;Pistol&lt;/strong&gt;. Additionally, we need to set the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; variable of the &lt;strong&gt;GrabComponent&lt;/strong&gt; to &lt;strong&gt;Replicated&lt;/strong&gt; and the &lt;strong&gt;Replication Condition&lt;/strong&gt; to &lt;strong&gt;Owner Only&lt;/strong&gt;.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/PistolReplicationDetails.png&quot; alt=&quot;Pistol replication details panel&quot; title=&quot;Pistol replication details&quot; /&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/GrabComponent/MotionControllerRefReplicationDetails.png&quot; alt=&quot;MotionControllerRef replication details panel&quot; title=&quot;MotionControllerRef replication details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;When using this approach, race conditions between the &lt;strong&gt;Replicated&lt;/strong&gt; variable &lt;strong&gt;MotionControllerRef&lt;/strong&gt; and the &lt;strong&gt;GrabOnOwningClient&lt;/strong&gt; RPC are possible, which could lead to warnings stating, “Warning: Accessed None trying to read property MotionControllerRef” on the client side. To solve this, we could introduce a new variable in the &lt;strong&gt;Pistol&lt;/strong&gt; Blueprint called &lt;strong&gt;HeldByHand&lt;/strong&gt;, which holds the value returned by the &lt;strong&gt;GetHeldByHand&lt;/strong&gt; function of the &lt;strong&gt;GrabComponent&lt;/strong&gt; Blueprint. The function &lt;strong&gt;GetHeldByHand&lt;/strong&gt; will be called just before the &lt;strong&gt;GrabOnOwningClient&lt;/strong&gt; RPC is executed, and the returned value will be used as an input argument for this RPC. On the client side, this variable is then set and used to determine the input mapping context. If we do this, we won’t need to replicate the &lt;strong&gt;GrabComponentSnap&lt;/strong&gt; and the &lt;strong&gt;MotionControllerRef&lt;/strong&gt; variable.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/PistolGrabbedAndDroppedWithRPCInput.png&quot; alt=&quot;Blueprint code to grab and drop the pistol with one input for the RPC&quot; title=&quot;Pistol grapped and dropped with RPC input&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;At this point, we are able to grab the pistol and remap the input mapping context on the owning client. Finally, to be able to fire the weapon, we need to spawn the projectile on the server and replicate it. To spawn the projectile on the server, we use a custom event that will run on the server.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/PistolShoot.png&quot; alt=&quot;Pistol shoot Blueprint code&quot; title=&quot;Pistol shoot&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The projectile itself also needs to be replicated.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/ProjectileReplicationDetails.png&quot; alt=&quot;Projectile replication details panel&quot; title=&quot;Projectile replication details&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Once the player drops the weapon, we want to remove the client that held the weapon as the owner of the actor. This will be handled in the &lt;strong&gt;TryRelease&lt;/strong&gt; function of the &lt;strong&gt;GrabComponent&lt;/strong&gt;.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/GrabComponent/RemoveOwnerInTryRelease.png&quot; alt=&quot;Blueprint code where the dropped object&apos;s owner is removed in the TryRelease function&quot; title=&quot;Remove owner in TryRelease&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;At this point, you will be able to fire the weapon and see the projectile fly and interact with the environment. However, there is one last thing that needs to be addressed. When grabbing a pistol or a cube, a haptic effect is played, and the same applies when firing the pistol. Currently, these haptic effects are being executed on the server side, meaning the player performing the action won’t feel them unless they are the listen server.&lt;/p&gt;

&lt;p&gt;Let’s first address the haptic effect when grabbing a cube or pistol. Go to the &lt;strong&gt;GrabComponent&lt;/strong&gt; Blueprint and open the event graph. Create a new custom event that executes the haptic effect on the owning client.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/GrabComponent/PlayOnGrabHapticEffectOnOwningClient.png&quot; alt=&quot;Blueprint code of the play on grab haptic effect on owning client event.&quot; title=&quot;Play on grab haptic effect on owning client&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;This event will then be triggered when an object is grabbed in the &lt;strong&gt;TryGrab&lt;/strong&gt; function.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/GrabComponent/PlayOnGrabHapticEffectOnOwningClientTriggered.png&quot; alt=&quot;Blueprint code where the play on grab haptic effect on owning client is triggered after a successful grab.&quot; title=&quot;Play on grab haptic effect on owning client triggered&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we need to ensure that the haptic effect &lt;strong&gt;PistolFireHapticEffect&lt;/strong&gt; is executed on the owning client when the pistol is fired.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;/assets/images/2024-11-01/Pistol/PlayPistolFireHapticEffectOnOwningClient.png&quot; alt=&quot;Blueprint code of the play pistol fire haptic effect on owning client event.&quot; title=&quot;Play pistol fire haptic effect on owning client&quot; /&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
